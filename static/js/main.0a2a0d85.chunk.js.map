{"version":3,"sources":["utils/md.jsx","pages lazy /^/.*/.jsx$/ groupOptions: {} namespace object","reportWebVitals.js","serviceWorkerRegistration.js","../lib/bra/rtcClient.js","../lib/bra/index.js","../lib/bra/lobbyClient.js","../lib/bra/mediaAdapter.js","../lib/bra/dummyStream.js","utils/http.js","utils/authentication.jsx","partials/nav.jsx","views/room.jsx","partials/modal.jsx","components/modal_recovery.jsx","components/modal_register.jsx","assets/img/logo.png","views/login.jsx","components/modal_about.jsx","components/modal_profile.jsx","components/btn_fullscreen.jsx","partials/layout.jsx","views/lobby.jsx","views/wizard.jsx","views/App.jsx","views/verified.jsx","views/resetpassword.jsx","components/router.jsx","index.js"],"names":["children","props","replaceAll","remarkPlugins","remarkGfm","remarkBreaks","rehypePlugins","rehypeRaw","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","RTCEvent","ClientConnected","ClientDisconnected","IncomingCall","CallAccepted","CallCanceled","CallOpened","CallClosed","UserHangup","RTCCall","callId","callerId","calleeId","connection","candidates","channels","initiator","getStats","a","callStats","stats","pairStats","forEach","report","type","selected","localCandidateId","localType","candidateType","localAddress","address","ip","localPort","port","localProtocol","protocol","remoteCandidateId","remoteType","remoteAddress","remotePort","remoteProtocol","bind","peerConnection","isInitiator","RTCPeerConnection","addEventListener","event","channel","label","close","getState","iceConnectionState","addCandidate","candidate","addIceCandidate","push","gatherPendingCandidates","length","setRemoteDescription","description","setBandwidth","bandwidth","senders","getSenders","i","sender","parameters","getParameters","encodings","maxBitrate","setParameters","getRemoteAudioTrack","index","receivers","getReceivers","tracks","receiver","track","kind","getRemoteVideoTrack","getRemoteStream","stream","MediaStream","addTrack","replaceLocalAudioTrack","audioSenders","replaceTrack","replaceLocalVideoTrack","videoSenders","openChannel","createDataChannel","closeChannel","onDataChannel","callback","onChannelOpen","onopen","onChannelClose","onChannelError","onerror","onChannelMessage","onmessage","sendData","data","readyState","send","appClient","settings","assign","debug","debugStyle","pingPeriod","_events","_token","_socket","_keepAliveTimeout","_userId","_channels","emit","args","slice","call","arguments","listeners","apply","this","onOpen","keepAlive","url","onMessage","msg","message","JSON","parse","HANDLERS","sendMessage","stringify","onClose","clearTimeout","ping","setTimeout","validateId","RegExp","test","status","userId","roomId","channelId","on","listener","off","indexOf","splice","connect","WebSocket","onclose","disconnect","login","token","logout","getRoom","getRooms","createRoom","joinRoom","leaveRoom","enableChannel","disableChannel","joinChannel","leaveChannel","forwardMessage","isDisconnected","isLogged","isInChannel","mediaAdapter","events","blackCanvas","audioStream","videoStream","mediaStream","audioDevices","videoDevices","resolutions","width","undefined","height","audioConstraints","audio","deviceId","exact","videoConstraints","video","frameRate","ideal","streamSettings","resolution","previousAudioConstraints","previousVideoConstraints","findDevices","getDevices","gotDevices","errorDevices","setDefaultDevices","localStorage","getItem","removeItem","setAudio","setVideo","mediaDevices","enumerateDevices","deviceInfos","v","deviceInfo","device","setItem","getSilenceStream","mixStreams","clone","getAudioStream","getBlackStream","getVideoStream","getSilenceTrack","audioContext","AudioContext","gainNode","createGain","oscillatorNode","createOscillator","destination","createMediaStreamDestination","gain","setValueAtTime","currentTime","start","getAudioTracks","getBlackTrack","document","createElement","context","getContext","fillRect","captureStream","videoTrack","getVideoTracks","stopStream","getUserMedia","gotAudioStream","errorAudioStream","gotVideoStream","errorVideoStream","audioTrack","audioTrackSettings","getSettings","videoTrackSettings","entries","sort","b","Number","NEGATIVE_INFINITY","reduce","r","k","errorStream","name","audioTracks","videoTracks","getTracks","stop","object","initialize","catchCallback","trace","dummyStream","_blackCanvas","_silenceStream","_blackStream","_silenceTrack","_blackTrack","createSilenceTrack","createBlackTrack","_stream","getAudioTrack","getVideoTrack","getStream","rtcClient","defaultSettings","defaultStream","responses","calls","socket","keepAliveTimeout","rtcConfiguration","iceServers","values","startKeepAlive","stopKeepAlive","handleRegisterResponse","handleUnregisterResponse","handleCallResponse","handleIncomingCall","handleCallAccepted","handleCallCanceled","handleRemoteOffer","handleRemoteAnswer","handleRemoteCandidate","handleUserHangup","uuid","response","OPEN","closeCall","hangup","uuidv4","replace","c","crypto","getRandomValues","Uint8Array","toString","oniceconnectionstatechange","other","handleIceConnectionStateChange","onicecandidate","onnegotiationneeded","createOffer","sdp","setLocalDescription","offer","createAnswer","answer","getCall","getCalls","CLOSED","username","unregister","acceptCall","cancelCall","DEBUG","http","get","fetch","json","post","method","headers","body","AuthenticationContext","createContext","useState","isAdmin","setAdmin","setLogged","app","rtc","isConnected","setConnected","user","setUser","setToken","avatar","store","email","password","doLogIn","toLowerCase","toastId","toast","loading","process","success","BRA","access_token","err","cookies","onLogin","userType","set","warn","onLogOut","useEffect","onUnload","removeEventListener","onAppConnect","onAppDisconnect","onRtcConnect","onRtcDisconnect","icon","Provider","value","Nav","buttons","history","useHistory","setActive","onKeyPressed","keyCode","disabled","to","style","zIndex","filter","ret","onClick","Item","activeClassName","className","appendclass","Button","Row","fluid","Col","xs","title","show","setShow","button_tittle","closeButton","Modal","centered","keyboard","backdrop","onHide","dialogClassName","Header","Title","Body","Footer","variant","formRef","useRef","auth","useContext","formErrors","formvalues","setFormValues","validated","setValidated","isValid","key","validateForm","size","Form","onSubmit","alert","ref","FloatingLabel","controlId","Control","required","placeholder","onChange","check","validateField","target","OverlayTrigger","placement","overlay","Tooltip","padding","Spinner","as","animation","role","Card","remember","preventDefault","app_token","handleUserInput","checked","bg","Img","src","logo","Text","defaultValue","Switch","defaultChecked","useReducer","n","proposalEvent","proposal","dispatch","onBeforeInstallPrompt","prompt","userChoice","outcome","setState","f","screenfull","isEnabled","toggle","fullscreen","Helmet","position","reverseOrder","toastOptions","duration","Image","RoomTile","Math","floor","random","sm","span","offset","lg","xl","Array","from","_","idx","pages","setSelected","page","setPage","views","setViews","s","vs","p","default","onSwipeLeft","onSwipeRight","md","marginLeft","marginTop","App","useParams","Container","pathname","component","path","Verified","ResetPass","ReactDOM","render","StrictMode","Suspense","fallback","ProgressBar","animated","now","getElementById","URL","href","origin","contentType","ready","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.0a2a0d85.chunk.js","sourcesContent":["import rehypeRaw from 'rehype-raw'\r\nimport remarkGfm from 'remark-gfm'\r\nimport remarkBreaks from 'remark-breaks'\r\nimport ReactMarkdown from 'react-markdown'\r\n\r\nexport default ({children,...props}) => {\r\n    return <ReactMarkdown children={children.replaceAll(\"  \",\"\")} remarkPlugins={[remarkGfm, remarkBreaks]} rehypePlugins={[rehypeRaw]} {...props}/>\r\n}","var map = {\n\t\"./p1.jsx\": [\n\t\t435,\n\t\t3\n\t],\n\t\"./p2.jsx\": [\n\t\t436,\n\t\t4\n\t],\n\t\"./p3.jsx\": [\n\t\t437,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 432;\nmodule.exports = webpackAsyncContext;","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","export const RTCEvent =\r\n{\r\n\tClientConnected:        \"client_connected\",\r\n\tClientDisconnected:     \"client_disconnected\",\r\n    IncomingCall:           \"incoming_call\",\r\n    CallAccepted:           \"call_accepted\",\r\n    CallCanceled:           \"call_canceled\",\r\n    CallOpened:             \"call_opened\",\r\n    CallClosed:             \"call_closed\",\r\n    UserHangup:             \"user_hangup\"\r\n};\r\n\r\nexport function RTCClient( settings )\r\n{\r\n//#region Variables\r\n    let defaultSettings =\r\n    {\r\n        debug: false,\r\n        debugStyle: \"background: hsla(0, 0%, 13%, 1); color: hsla(74, 64%, 60%, 1)\",\r\n        pingPeriod: 5 * 1000,\r\n        defaultStream: new MediaStream()\r\n    };\r\n\r\n    settings = (typeof settings !== \"object\") ? { } : settings;\r\n    settings = Object.assign({ }, defaultSettings, settings);\r\n\r\n    let console = (settings.debug) ? window.console : null;\r\n\r\n    let responses = { };\r\n    let events = { };\r\n\r\n    let calls = { };\r\n    let socket = null;\r\n    let keepAliveTimeout = null;\r\n\r\n    let userId = null;\r\n    let rtcConfiguration = { iceServers: null };\r\n//#endregion\r\n\r\n//#region Methods\r\n    /**\r\n     * Add a function that will be called whenever the specified event is emitted.\r\n     */\r\n    let on = function( event, listener )\r\n    {\r\n        if( Object.values(RTCEvent).indexOf(event) == -1 )\r\n        {\r\n            return false;\r\n        }\r\n\r\n        if( !(listener instanceof Function) )\r\n        {\r\n            return false;\r\n        }\r\n\r\n        if( typeof events[event] !== \"object\" )\r\n        {\r\n            events[event] = [];\r\n        }\r\n\r\n        events[event].push(listener);\r\n\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Remove the function previously added to be called whenever the specified event is emitted.\r\n     */\r\n    let off = function( event, listener )\r\n    {\r\n        if( Object.values(RTCEvent).indexOf(event) == -1 )\r\n        {\r\n            return false;\r\n        }\r\n\r\n        if( !(listener instanceof Function) )\r\n        {\r\n            return false;\r\n        }\r\n\r\n        if( typeof events[event] === \"object\" )\r\n        {\r\n            let index = events[event].indexOf(listener);\r\n            if( index > -1 )\r\n            {\r\n                events[event].splice(index, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * Emit the specified event.\r\n     */\r\n    let emit = function( event )\r\n    {\r\n        if( Object.values(RTCEvent).indexOf(event) == -1 )\r\n        {\r\n            return false;\r\n        }\r\n\r\n        let args = [].slice.call(arguments, 1);\r\n\r\n        if( typeof events[event] === \"object\" )\r\n        {\r\n            let listeners = events[event].slice();\r\n            for( let i = 0; i < listeners.length; i++ )\r\n            {\r\n                listeners[i].apply(this, args);\r\n            }\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Get the call identified by the specified ID.\r\n     */\r\n    let getCall = function( callId )\r\n    {\r\n        return (callId in calls) ? calls[callId] : null;\r\n    };\r\n \r\n    /**\r\n     * Get all the calls.\r\n     */\r\n    let getCalls = function()\r\n    {\r\n        return calls;\r\n    };\r\n\r\n    /**\r\n     * Connect to the server.\r\n     */\r\n    let connect = function( url )\r\n    {\r\n        if( socket && socket.readyState != WebSocket.CLOSED )\r\n        {\r\n            console?.error(\"WebSocket not closed\");\r\n            return;\r\n        }\r\n\r\n        socket = new WebSocket(url);\r\n\r\n        socket.onopen = onOpen;\r\n        socket.onmessage = onMessage;\r\n        socket.onclose = onClose;\r\n    };\r\n\r\n    /**\r\n     * Disconnect from the server.\r\n     */\r\n    let disconnect = function()\r\n    {\r\n        if( !socket || socket.readyState == WebSocket.OPEN )\r\n        {\r\n            console?.error(\"WebSocket not opened\");\r\n            return;\r\n        }\r\n\r\n        socket?.close();\r\n    };\r\n\r\n    /**\r\n     * Event handler called when the connection is opened.\r\n     */\r\n    let onOpen = function( event )\r\n    {\r\n        startKeepAlive();\r\n\r\n        console?.log(\"%c\" + RTCEvent.ClientConnected + \"%o\", settings.debugStyle, socket.url);\r\n\r\n        emit(RTCEvent.ClientConnected, { url: socket.url });\r\n    };\r\n\r\n    /**\r\n     * Event handler called when the connection is closed.\r\n     */\r\n    let onClose = function( event )\r\n    {\r\n        userId = null;\r\n        rtcConfiguration.iceServers = null;\r\n\r\n        stopKeepAlive();\r\n\r\n        console?.log(\"%c\" + RTCEvent.ClientDisconnected + \"%o\", settings.debugStyle, socket.url);\r\n        emit(RTCEvent.ClientDisconnected, { url: socket.url });\r\n    };\r\n\r\n    /**\r\n     * Event handler called when a message is received from the server.\r\n     */\r\n    let onMessage = function( msg )\r\n    {\r\n        let message = JSON.parse(msg.data);\r\n        if( message.id === \"pong\" )\r\n        {\r\n            return;\r\n        }\r\n\r\n        console?.log(\" %c%s\" + \"%o\", settings.debugStyle, message.id, msg.data);\r\n\r\n        // Check whether the message needs internal handling.\r\n        switch( message.id )\r\n        {\r\n            case \"register_response\":       handleRegisterResponse(message);        break;\r\n            case \"unregister_response\":     handleUnregisterResponse(message);      break;\r\n            case \"call_response\":           handleCallResponse(message);            break;\r\n            case \"incoming_call\":           handleIncomingCall(message);            break;\r\n            case \"call_accepted\":           handleCallAccepted(message);            break;\r\n            case \"call_canceled\":           handleCallCanceled(message);            break;\r\n            case \"remote_offer\":            handleRemoteOffer(message);             break;\r\n            case \"remote_answer\":           handleRemoteAnswer(message);            break;\r\n            case \"remote_candidate\":        handleRemoteCandidate(message);         break;\r\n            case \"user_hangup\":             handleUserHangup(message);              break;\r\n        }\r\n\r\n        // Check whether the message has a response listener.\r\n        if( message.uuid in responses )\r\n        {\r\n            let response = responses[message.uuid];\r\n            delete responses[message.uuid];\r\n            delete message.uuid;\r\n            response(message);\r\n        }\r\n\r\n        // Check whether the message has an event.\r\n        emit(message.id, message);\r\n    };\r\n\r\n    /**\r\n     * Send a message to the server.\r\n     */\r\n    let sendMessage = function( message, response )\r\n    {\r\n        if( !socket || socket.readyState !== WebSocket.OPEN )\r\n        {\r\n            return false;\r\n        }\r\n\r\n        // Generate a UUID.\r\n        message.uuid = uuid();\r\n\r\n        // Add the response listener.\r\n        if( response instanceof Function )\r\n        {\r\n            responses[message.uuid] = response;\r\n        }\r\n\r\n        // Send the message.\r\n        let msg = JSON.stringify(message);\r\n        socket.send(msg);\r\n        if( message.id !== \"ping\" )\r\n        {\r\n            console?.log(\" %c%s\" + \"%o\", settings.debugStyle, message.id, msg);\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Start a keep alive timeout.\r\n     */\r\n    let startKeepAlive = function()\r\n    {\r\n        if( !socket || socket.readyState !== WebSocket.OPEN )\r\n        {\r\n            console?.error(\"WebSocket not opened\");\r\n            return false;\r\n        }\r\n\r\n        ping();\r\n\r\n        keepAliveTimeout = window.setTimeout(startKeepAlive, settings.pingPeriod);\r\n\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Stop the keep alive timeout.\r\n     */\r\n    let stopKeepAlive = function()\r\n    {\r\n        window.clearTimeout(keepAliveTimeout);\r\n    };\r\n \r\n    /**\r\n     * Send a ping to the server.\r\n     */\r\n    let ping = function()\r\n    {\r\n        let message =\r\n        {\r\n            id: \"ping\"\r\n        };\r\n        return sendMessage(message);\r\n    };\r\n\r\n    /**\r\n     * Register to the server.\r\n     */\r\n    let register = function( username, response )\r\n    {\r\n        if( userId )\r\n        {\r\n            console?.error(\"Client already registered\");\r\n            return false;\r\n        }\r\n\r\n        let message =\r\n        {\r\n            id: \"register\",\r\n            userId: username\r\n        };\r\n        return sendMessage(message, response);\r\n    };\r\n\r\n    /**\r\n     * Unregister from the server.\r\n     */\r\n    let unregister = function( response )\r\n    {\r\n        if( !userId )\r\n        {\r\n            console?.error(\"Client not registered\");\r\n            return false;\r\n        }\r\n\r\n        hangup();\r\n\r\n        let message =\r\n        {\r\n            id: \"unregister\",\r\n            userId: userId\r\n        };\r\n        return sendMessage(message, response);\r\n    };\r\n\r\n    /**\r\n     * Call a user.\r\n     */\r\n    let call = function( calleeId, response )\r\n    {\r\n        if( userId === calleeId )\r\n        {\r\n            console?.error(\"Invalid user id \" + calleeId);\r\n            return false;\r\n        }\r\n\r\n        let message =\r\n        {\r\n            id: \"call\",\r\n            callerId: userId,\r\n            calleeId: calleeId\r\n        };\r\n        return sendMessage(message, response);\r\n    };\r\n\r\n    /**\r\n     * Close a call.\r\n     */\r\n    let closeCall = function( callId )\r\n    {\r\n        if( !(callId in calls) )\r\n        {\r\n            return false;\r\n        }\r\n\r\n        let call = calls[callId];\r\n        call.close();\r\n        delete(calls[callId]);\r\n\r\n        emit(RTCEvent.CallClosed, { call: call });\r\n\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Accept a call.\r\n     */\r\n    let acceptCall = function( callId, response )\r\n    {\r\n        if( !(callId in calls) )\r\n        {\r\n            console?.error(\"Call \" + callId + \" not found\");\r\n            return false;\r\n        }\r\n\r\n        let call = calls[callId];\r\n\r\n        let message =\r\n        {\r\n            id: \"accept_call\",\r\n            callId: call.callId,\r\n            callerId: call.callerId,\r\n            calleeId: call.calleeId\r\n        };\r\n        return sendMessage(message, response);\r\n    };\r\n\r\n    /**\r\n     * Cancel a call.\r\n     */\r\n    let cancelCall = function( callId, response )\r\n    {\r\n        if( !(callId in calls) )\r\n        {\r\n            console?.error(\"Call \" + callId + \" not found\");\r\n            return false;\r\n        }\r\n\r\n        // Delete the call.\r\n        let call = calls[callId];\r\n        delete calls[callId];\r\n\r\n        let message =\r\n        {\r\n            id: \"cancel_call\",\r\n            callId: call.callId,\r\n            callerId: call.callerId,\r\n            calleeId: call.calleeId\r\n        };\r\n        return sendMessage(message, response);\r\n    };\r\n\r\n    /**\r\n     * Hang up a call. If call ID is undefined then all calls are hang up.\r\n     */\r\n    let hangup = function( callId, response )\r\n    {\r\n        if( callId ) // Close the call.\r\n        {\r\n            if( !closeCall(callId) )\r\n            {\r\n                return false;\r\n            }\r\n\r\n            let message =\r\n            {\r\n                id: \"hangup\",\r\n                callId: callId\r\n            };\r\n            return sendMessage(message, response);\r\n        }\r\n        else // Close all the calls.\r\n        {\r\n            for( let callId in calls )\r\n            {\r\n                if( !closeCall(callId) )\r\n                {\r\n                    continue;\r\n                }\r\n\r\n                let message =\r\n                {\r\n                    id: \"hangup\",\r\n                    callId: callId\r\n                };\r\n                sendMessage(message);\r\n            }\r\n\r\n            calls = { };\r\n\r\n            return true;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Generate a universally unique identifier.\r\n     * Reference: RFC 4122 https://www.ietf.org/rfc/rfc4122.txt\r\n     */\r\n    let uuid = function()\r\n    {\r\n        return uuidv4();\r\n    };\r\n \r\n    /**\r\n     * Generate a universally unique identifier v4.\r\n     * Reference: https://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid\r\n     */\r\n    let uuidv4 = function()\r\n    {\r\n        return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\r\n        (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\r\n        );\r\n    };\r\n//#endregion\r\n\r\n//#region EventHandlers\r\n    /**\r\n     * Register response event handler.\r\n     */\r\n    let handleRegisterResponse = function( event )\r\n    {\r\n        if( event.status === \"ok\" )\r\n        {\r\n            userId = event.userId;\r\n            rtcConfiguration.iceServers = JSON.parse(event.iceServers);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Unregister response event handler.\r\n     */\r\n    let handleUnregisterResponse = function( event )\r\n    {\r\n        if( event.status === \"ok\" )\r\n        {\r\n            userId = null;\r\n            rtcConfiguration.iceServers = null;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Call response event handler.\r\n     */\r\n    let handleCallResponse = function( event )\r\n    {\r\n        if( event.status === \"ok\" )\r\n        {\r\n            // Create the call.\r\n            let call = new RTCCall(event.callId, event.callerId, event.calleeId);\r\n            calls[call.callId] = call;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Incoming call event handler.\r\n     */\r\n    let handleIncomingCall = function( event )\r\n    {\r\n        // Create the call.\r\n        let call = new RTCCall(event.callId, event.callerId, event.calleeId);\r\n        calls[event.callId] = call;\r\n    };\r\n\r\n    /**\r\n     * Call accepted event handler.\r\n     */\r\n    let handleCallAccepted = function( event )\r\n    {\r\n        // Create the peer connection.\r\n        let peerConnection = new RTCPeerConnection(rtcConfiguration);\r\n        let call = calls[event.callId];\r\n        call.bind(peerConnection, true);\r\n\r\n        // Handle the peer connection lifecycle.\r\n        peerConnection.oniceconnectionstatechange = function( other )\r\n        {\r\n            handleIceConnectionStateChange(call);\r\n        }\r\n\r\n        // Generate candidates.\r\n        peerConnection.onicecandidate = function( other )\r\n        {\r\n            if( !other.candidate || other.candidate === \"\" ) // Empty if the RTCIceCandidate is an \"end of candidates\" indicator.\r\n            {\r\n                return;\r\n            }\r\n\r\n            let message =\r\n            {\r\n                id: \"candidate\",\r\n                callId: event.callId,\r\n                callerId: event.callerId,\r\n                calleeId: event.calleeId,\r\n                candidate: JSON.stringify(other.candidate)\r\n            };\r\n            sendMessage(message);\r\n        };\r\n\r\n        peerConnection.onnegotiationneeded = function( other )\r\n        {\r\n            // Generate offer.\r\n            peerConnection.createOffer().then(function( sdp )\r\n            {\r\n                // Set caller local description.\r\n                peerConnection.setLocalDescription(sdp);\r\n\r\n                let message =\r\n                {\r\n                    id: \"offer\",\r\n                    callId: event.callId,\r\n                    callerId: event.callerId,\r\n                    calleeId: event.calleeId,\r\n                    offer: JSON.stringify(sdp)\r\n                };\r\n                sendMessage(message);\r\n            });\r\n        };\r\n\r\n        // Add the tracks. This action triggers the ICE negotiation process.\r\n        let tracks = settings.defaultStream.getTracks();\r\n        tracks.forEach(track => peerConnection.addTrack(track));\r\n\r\n        // Create a default data channel to avoid renegotiation.\r\n        peerConnection.createDataChannel(\"default\");\r\n    };\r\n\r\n    /**\r\n     * Call canceled event handler.\r\n     */\r\n    let handleCallCanceled = function( event )\r\n    {\r\n        closeCall(event.callId);\r\n    };\r\n\r\n    /**\r\n     * Remote offer event handler.\r\n     */\r\n    let handleRemoteOffer = function( event )\r\n    {\r\n        // Create the peer connection.\r\n        let peerConnection = new RTCPeerConnection(rtcConfiguration);\r\n        let call = calls[event.callId];\r\n        call.bind(peerConnection, false);\r\n\r\n        // Handle the peer connection lifecycle.\r\n        peerConnection.oniceconnectionstatechange = function( other )\r\n        {\r\n            handleIceConnectionStateChange(call);\r\n        }\r\n\r\n        // Set the callee remote description.\r\n        peerConnection.setRemoteDescription(JSON.parse(event.offer));\r\n\r\n        // Gather the pending candidates.\r\n        call.gatherPendingCandidates();\r\n\r\n        // Generate the candidates.\r\n        peerConnection.onicecandidate = function( other )\r\n        {\r\n            if( !other.candidate || other.candidate === \"\" ) // Empty if the RTCIceCandidate is an \"end of candidates\" indicator.\r\n            {\r\n                return;\r\n            }\r\n\r\n            let message =\r\n            {\r\n                id: \"candidate\",\r\n                callId: event.callId,\r\n                callerId: event.callerId,\r\n                calleeId: event.calleeId,\r\n                candidate: JSON.stringify(other.candidate)\r\n            };\r\n            sendMessage(message);\r\n        };\r\n\r\n        // Add the tracks.\r\n        let tracks = settings.defaultStream.getTracks();\r\n        tracks.forEach(track => peerConnection.addTrack(track));\r\n\r\n        // Create the answer.\r\n        window.setTimeout(function()\r\n        {\r\n            peerConnection.createAnswer().then(function( sdp )\r\n            {\r\n                // Set the callee local description.\r\n                peerConnection.setLocalDescription(sdp);\r\n\r\n                let message =\r\n                {\r\n                    id: \"answer\",\r\n                    callId: event.callId,\r\n                    callerId: event.callerId,\r\n                    calleeId: event.calleeId,\r\n                    answer: JSON.stringify(sdp)\r\n                };\r\n                sendMessage(message);\r\n            });\r\n        }, 500);\r\n    };\r\n\r\n    /**\r\n     * Remote answer event handler.\r\n     */\r\n    let handleRemoteAnswer = function( event )\r\n    {\r\n        if( event.callId in calls )\r\n        {\r\n            let answer = JSON.parse(event.answer);\r\n\r\n            // Set the caller remote description.\r\n            calls[event.callId].setRemoteDescription(answer);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Remote candidate event handler.\r\n     */\r\n    let handleRemoteCandidate = function( event )\r\n    {\r\n        let candidate = JSON.parse(event.candidate);\r\n        if( !candidate || !candidate.candidate || candidate.candidate === \"\" ) // Empty if the RTCIceCandidate is an \"end of candidates\" indicator.\r\n        {\r\n            return;\r\n        }\r\n\r\n        if( event.callId in calls )\r\n        {\r\n            let call = calls[event.callId];\r\n            call.addCandidate(candidate);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * User hangup event handler.\r\n     */\r\n    let handleUserHangup = function( event )\r\n    {\r\n        closeCall(event.callId);\r\n    };\r\n\r\n    /**\r\n     * ICE connection state change event handler.\r\n     */\r\n    let handleIceConnectionStateChange = async function( call )\r\n    {\r\n        let state = call.getState();\r\n        console?.log(\"%c\" + \"Connection State\" + \"%o%o\", settings.debugStyle, call.callId, state);\r\n\r\n        switch( state )\r\n        {\r\n            case \"failed\":\r\n            case \"disconnected\":\r\n            case \"closed\":\r\n            {\r\n                hangup(call.callId);\r\n                break;\r\n            }\r\n            case \"new\":\r\n            case \"checking\":\r\n            case \"completed\":\r\n            {\r\n                break;\r\n            }\r\n            case \"connected\":\r\n            {\r\n                let stream = call.getRemoteStream();\r\n                console?.log(\"%c\" + RTCEvent.CallOpened + \"%o%o\", settings.debugStyle, call.callId, stream);\r\n                emit(RTCEvent.CallOpened, { call: call, stream: stream });\r\n                break;\r\n            }\r\n        }\r\n    };\r\n//#endregion\r\n\r\n    return {\r\n        on,\r\n        off,\r\n        getCall,\r\n        getCalls,\r\n        connect,\r\n        disconnect,\r\n        register,\r\n        unregister,\r\n        call,\r\n        acceptCall,\r\n        cancelCall,\r\n        hangup\r\n    };\r\n}\r\n\r\nexport function RTCCall( callId, callerId, calleeId )\r\n{\r\n//#region Variables\r\n    let connection = null;\r\n    let candidates = [];\r\n    let channels = { };\r\n    let initiator = false;\r\n//#endregion\r\n\r\n//#region Methods\r\n    /**\r\n     * Bind the call to a peer connection.\r\n     */\r\n    let bind = function( peerConnection, isInitiator )\r\n    {\r\n        if( !(peerConnection instanceof RTCPeerConnection) )\r\n        {\r\n            return false;\r\n        }\r\n\r\n        connection = peerConnection;\r\n        initiator = isInitiator;\r\n\r\n        // Handle the data channel event internally to track the data channels lifecycle.\r\n        connection.addEventListener(\"datachannel\", function( event )\r\n        {\r\n            channels[event.channel.label] = event.channel;\r\n\r\n            // Handle the close event.\r\n            event.channel.addEventListener(\"onclose\", function( event )\r\n            {\r\n                delete channels[event.channel.label];\r\n            });\r\n        });\r\n\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Close the call.\r\n     */\r\n    let close = function()\r\n    {\r\n        connection?.close();\r\n    };\r\n\r\n    /**\r\n     * Return whether the user is the initiator.\r\n     */\r\n    let isInitiator = function()\r\n    {\r\n        return initiator;\r\n    };\r\n\r\n    /**\r\n     * Get the call state.\r\n     */\r\n    let getState = function()\r\n    {\r\n        return (connection) ? connection.iceConnectionState : \"closed\";\r\n    };\r\n\r\n    /**\r\n     * Get the call stats.\r\n     */\r\n    let getStats = async function()\r\n    {\r\n        if( !connection )\r\n        {\r\n            return;\r\n        }\r\n\r\n        let callStats = { callId: callId, callerId: callerId, calleeId: calleeId };\r\n\r\n        return await connection.getStats(null).then(function( stats )\r\n        {\r\n            // Get the stats of the succeeded candidate pair.\r\n            let pairStats = null;\r\n            stats.forEach(report =>\r\n            {\r\n                //console.log(report);\r\n                if( report.type === \"candidate-pair\" && (report.selected === true || report.state === \"succeeded\") )\r\n                {\r\n                    pairStats = report;\r\n                }\r\n            });\r\n\r\n            // Get the stats of the local and remote candidates.\r\n            if( pairStats )\r\n            {\r\n                stats.forEach(report =>\r\n                {\r\n                    if( report.id === pairStats.localCandidateId )\r\n                    {\r\n                        callStats.localType = report.candidateType;\r\n                        callStats.localAddress = report.address ?? report.ip;\r\n                        callStats.localPort = report.port;\r\n                        callStats.localProtocol = report.protocol;\r\n                    }\r\n                    if( report.id === pairStats.remoteCandidateId )\r\n                    {\r\n                        callStats.remoteType = report.candidateType;\r\n                        callStats.remoteAddress = report.address ?? report.ip;\r\n                        callStats.remotePort = report.port;\r\n                        callStats.remoteProtocol = report.protocol;\r\n                    }\r\n                });\r\n            }\r\n\r\n            return Promise.resolve(callStats);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Add a candidate or save it for gathering.\r\n     */\r\n    let addCandidate = function( candidate )\r\n    {\r\n        if( !connection )\r\n        {\r\n            candidates.push(candidate);\r\n        }\r\n        else\r\n        {\r\n            connection.addIceCandidate(candidate);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Gather the pending candidates.\r\n     */\r\n    let gatherPendingCandidates = function()\r\n    {\r\n        if( candidates.length > 0 )\r\n        {\r\n            candidates.forEach(candidate => connection.addIceCandidate(candidate));\r\n            candidates = [];\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set the remote session description.\r\n     */\r\n    let setRemoteDescription = function( description )\r\n    {\r\n        if( !connection )\r\n        {\r\n            return false;\r\n        }\r\n\r\n        connection.setRemoteDescription(description);\r\n\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * [NYI] Set the stream's bandwidth.\r\n     * References:\r\n     * https://webrtchacks.com/limit-webrtc-bandwidth-sdp/\r\n     * https://stackoverflow.com/questions/57653899/how-to-increase-the-bitrate-of-webrtc\r\n     */\r\n    let setBandwidth = function( bandwidth )\r\n    {\r\n        if( !connection )\r\n        {\r\n            return false;\r\n        }\r\n\r\n        let senders = connection.getSenders();\r\n        if( !senders )\r\n        {\r\n            return false;\r\n        }\r\n\r\n        for( let i = 0; i < senders.length; i++ )\r\n        {\r\n            let sender = senders[i];\r\n            let parameters = sender.getParameters();\r\n            if( !parameters.encodings )\r\n            {\r\n                parameters.encodings = [{ }];\r\n            }\r\n\r\n            parameters.encodings[0].maxBitrate = bandwidth * 1000;\r\n\r\n            sender.setParameters(parameters);\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Get the remote audio track specified by index.\r\n     */\r\n    let getRemoteAudioTrack = function ( index = 0 )\r\n    {\r\n        if( !connection )\r\n        {\r\n            return null;\r\n        }\r\n\r\n        let receivers = connection.getReceivers();\r\n        if( !receivers )\r\n        {\r\n            return null;\r\n        }\r\n\r\n        let tracks = [];\r\n        for( let i = 0; i < receivers.length; i++ )\r\n        {\r\n            let receiver = receivers[i];\r\n            if( receiver.track.kind === \"audio\" )\r\n            {\r\n                tracks.push(receiver.track);\r\n            }\r\n        }\r\n\r\n        if( index >= 0 && index < tracks.length )\r\n        {\r\n            return tracks[index];\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Get the remote video track specified by index.\r\n     */\r\n    let getRemoteVideoTrack = function ( index = 0 )\r\n    {\r\n        if( !connection )\r\n        {\r\n            return null;\r\n        }\r\n\r\n        let receivers = connection.getReceivers();\r\n        if( !receivers )\r\n        {\r\n            return null;\r\n        }\r\n\r\n        let tracks = [];\r\n        for( let i = 0; i < receivers.length; i++ )\r\n        {\r\n            let receiver = receivers[i];\r\n            if( receiver.track.kind === \"video\" )\r\n            {\r\n                tracks.push(receiver.track);\r\n            }\r\n        }\r\n\r\n        if( index >= 0 && index < tracks.length )\r\n        {\r\n            return tracks[index];\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Get the remote stream of the peer connection composed by all the audio and video tracks.\r\n     */\r\n    let getRemoteStream = function()\r\n    {\r\n        if( !connection )\r\n        {\r\n            return null;\r\n        }\r\n\r\n        let receivers = connection.getReceivers();\r\n        if( !receivers )\r\n        {\r\n            return null;\r\n        }\r\n\r\n        let tracks = [];\r\n        for( let i = 0; i < receivers.length; i++ )\r\n        {\r\n            let receiver = receivers[i];\r\n            if( receiver.track )\r\n            {\r\n                tracks.push(receiver.track);\r\n            }\r\n        }\r\n\r\n        if( tracks.length === 0 )\r\n        {\r\n            return null;\r\n        }\r\n\r\n        let stream = new MediaStream();\r\n        for( let i = 0; i < tracks.length; i++ )\r\n        {\r\n            let track = tracks[i];\r\n            stream.addTrack(track);\r\n        }\r\n\r\n        return stream;\r\n    };\r\n\r\n    /**\r\n     * Replace the local audio track specified by index.\r\n     */\r\n    let replaceLocalAudioTrack = function( track, index = 0 )\r\n    {\r\n        if( !connection || !track )\r\n        {\r\n            return false;\r\n        }\r\n\r\n        let audioSenders = [];\r\n        let senders = connection.getSenders();\r\n        for( let i = 0; i < senders.length; i++ )\r\n        {\r\n            let sender = senders[i];\r\n            if( sender.track && sender.track.kind === \"audio\" )\r\n            {\r\n                audioSenders.push(sender);\r\n            }\r\n        }\r\n\r\n        if( index >= 0 && index < audioSenders.length )\r\n        {\r\n            audioSenders[index].replaceTrack(track);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * Replace the local video track specified by index.\r\n     */\r\n    let replaceLocalVideoTrack = function( track, index = 0 )\r\n    {\r\n        if( !connection || !track )\r\n        {\r\n            return false;\r\n        }\r\n\r\n        let videoSenders = [];\r\n        let senders = connection.getSenders();\r\n        for( let i = 0; i < senders.length; i++ )\r\n        {\r\n            let sender = senders[i];\r\n            if( sender.track && sender.track.kind === \"video\" )\r\n            {\r\n                videoSenders.push(sender);\r\n            }\r\n        }\r\n\r\n        if( index >= 0 && index < videoSenders.length )\r\n        {\r\n            videoSenders[index].replaceTrack(track);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n//#endregion\r\n\r\n//#region DataChannel\r\n    /**\r\n     * Open a data channel.\r\n     */\r\n    let openChannel = function( label )\r\n    {\r\n        if( !connection || label in channels )\r\n        {\r\n            return false;\r\n        }\r\n\r\n        let channel = connection.createDataChannel(label);\r\n        channels[label] = channel;\r\n\r\n        // Handle the close event.\r\n        channel.addEventListener(\"onclose\", function( event )\r\n        {\r\n            delete channels[channel.label];\r\n        });\r\n\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Close a data channel.\r\n     */\r\n    let closeChannel = function( label )\r\n    {\r\n        if( !connection || !(label in channels) )\r\n        {\r\n            return false;\r\n        }\r\n\r\n        let channel = channels[label];\r\n        channel.close();\r\n        delete channels[label];\r\n\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Set a callback for the data channel event.\r\n     */\r\n    let onDataChannel = function( callback )\r\n    {\r\n        if( !connection )\r\n        {\r\n            return false;\r\n        }\r\n\r\n        connection.addEventListener(\"datachannel\", callback);\r\n\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Set a callback to a data channel open event.\r\n     */\r\n    let onChannelOpen = function( label, callback )\r\n    {\r\n        if( !connection || !(label in channels) || !(callback instanceof Function) )\r\n        {\r\n            return false;\r\n        }\r\n\r\n        let channel = channels[label];\r\n        channel.onopen = callback;\r\n\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Set a callback to a data channel close event.\r\n     */\r\n    let onChannelClose = function( label, callback )\r\n    {\r\n        if( !connection || !(label in channels) || !(callback instanceof Function) )\r\n        {\r\n            return false;\r\n        }\r\n\r\n        let channel = channels[label];\r\n        channel.addEventListener(\"onclose\", callback);\r\n\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Set a callback to a data channel error event.\r\n     */\r\n    let onChannelError = function( label, callback )\r\n    {\r\n        if( !connection || !(label in channels) || !(callback instanceof Function) )\r\n        {\r\n            return false;\r\n        }\r\n\r\n        let channel = channels[label];\r\n        channel.onerror = callback;\r\n\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Set a callback to a data channel message event.\r\n     */\r\n    let onChannelMessage = function( label, callback )\r\n    {\r\n        if( !connection || !(label in channels) || !(callback instanceof Function) )\r\n        {\r\n            return false;\r\n        }\r\n\r\n        let channel = channels[label];\r\n        channel.onmessage = callback;\r\n\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Send data through an opened channel.\r\n     */\r\n    let sendData = function( label, data )\r\n    {\r\n        if( !connection || !(label in channels) )\r\n        {\r\n            return false;\r\n        }\r\n\r\n        let channel = channels[label];\r\n        if( channel.readyState !== \"open\" )\r\n        {\r\n            return false;\r\n        }\r\n\r\n        channel.send(data);\r\n\r\n        return true;\r\n    };\r\n//#endregion\r\n\r\n    return {\r\n        get callId() { return callId; },\r\n        get callerId() { return callerId; },\r\n        get calleeId() { return calleeId; },\r\n        bind,\r\n        close,\r\n        isInitiator,\r\n        getState,\r\n        getStats,\r\n        addCandidate,\r\n        gatherPendingCandidates,\r\n        setRemoteDescription,\r\n        setBandwidth,\r\n        getRemoteAudioTrack,\r\n        getRemoteVideoTrack,\r\n        getRemoteStream,\r\n        replaceLocalAudioTrack,\r\n        replaceLocalVideoTrack,\r\n        openChannel,\r\n        closeChannel,\r\n        onDataChannel,\r\n        onChannelOpen,\r\n        onChannelClose,\r\n        onChannelError,\r\n        onChannelMessage,\r\n        sendData\r\n    };\r\n}","// eslint-disable\r\n\r\n//import AdapterJS from 'adapterjs';\r\nimport { RTCEvent, RTCClient }    from \"./rtcClient.js\";      // eslint-disable-line\r\nimport { LobbyClient }  from './lobbyClient.js';      // eslint-disable-line\r\nimport { MediaAdapter } from \"./mediaAdapter.js\";   // eslint-disable-line\r\nimport { DummyStream }  from \"./dummyStream.js\";\r\n\r\nlet appClient    = window.appClient    = new LobbyClient(),\r\n    mediaAdapter = window.mediaAdapter = new MediaAdapter(),\r\n    dummyStream  = window.dummyStream  = new DummyStream(),\r\n    rtcClient    = window.rtcClient    = new RTCClient({ debug: true, defaultStream: dummyStream.getStream() });\r\n\r\n    appClient.DEBUG = false;\r\n    rtcClient.DEBUG = false;\r\n    mediaAdapter.DEBUG = false;\r\n\r\nexport {\r\n   RTCEvent,\r\n   rtcClient, \r\n   appClient,\r\n   mediaAdapter,\r\n   dummyStream\r\n}","export function LobbyClient( settings )\r\n{\r\n//#region PRIVATE\r\n\r\n    let _defaultSettings =\r\n    {\r\n        // Debug messages to console?\r\n        debug: false,\r\n\r\n        // Style used to debug messages.\r\n        debugStyle: \"background: hsla(0, 0%, 13%, 1); color: hsla(180, 89%, 45%, 1)\",\r\n\r\n        // Period to send ping messages in ms.\r\n        pingPeriod: 5 * 1000\r\n    };\r\n\r\n    settings = (typeof settings !== \"object\") ? { } : settings;\r\n    settings = Object.assign(_defaultSettings, settings);\r\n\r\n    let console = (settings.debug) ? window.console : null;\r\n\r\n    let _events = { };\r\n    let _token = null;\r\n    let _socket = null;\r\n    let _keepAliveTimeout = null;\r\n\r\n    let _userId = null;\r\n    let _roomId = null;\r\n    let _channels = { };\r\n\r\n    /**\r\n     * Add a function that will be called whenever the specified event is emitted.\r\n     * @param {String} event - The event name.\r\n     * @param {Function} listener - The function to add.\r\n     */\r\n    let on = function( event, listener )\r\n    {\r\n        if( typeof _events[event] !== \"object\" )\r\n        {\r\n            _events[event] = [];\r\n        }\r\n\r\n        _events[event].push(listener);\r\n    };\r\n\r\n    /**\r\n     * Remove the function previously added to be called whenever the specified event is emitted.\r\n     * @param {String} event - The event name.\r\n     * @param {Function} listener - The previously added function.\r\n     */\r\n    let off = function( event, listener )\r\n    {   \r\n        if( typeof _events[event] === \"object\" )\r\n        {\r\n            let index = _events[event].indexOf(listener);\r\n            if( index > -1 )\r\n            {\r\n                _events[event].splice(index, 1);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Emit the specified event.\r\n     * @param {String} event - The event name.\r\n     */\r\n    let emit = function( event )\r\n    {\r\n        let args = [].slice.call(arguments, 1);\r\n\r\n        if( typeof _events[event] === \"object\" )\r\n        {\r\n            let listeners = _events[event].slice();\r\n            for( let i = 0; i < listeners.length; i++ )\r\n            {\r\n                listeners[i].apply(this, args);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Connect to the server.\r\n     * @param {String} url - The URL of the server.\r\n     */\r\n    let connect = function( url )\r\n    {\r\n        _socket = new WebSocket(url);\r\n\r\n        _socket.onopen = onOpen;\r\n        _socket.onmessage = onMessage;\r\n        _socket.onclose = onClose;\r\n    };\r\n\r\n    /**\r\n     * Event handler called when the connection is opened.\r\n     * @param {EventListener} event - The dispatched event.\r\n     */\r\n    let onOpen = function( event )\r\n    {\r\n        // Start the keep alive routine.\r\n        keepAlive();\r\n\r\n        console?.log(\"%cclient_connected%o\", settings.debugStyle, _socket.url);\r\n\r\n        emit(\"client_connected\", { url: _socket.url });\r\n    };\r\n\r\n    /**\r\n     * Event handler called when a message is received from the server.\r\n     * @param {EventListener} msg - The message received.\r\n     */\r\n    let onMessage = function( msg )\r\n    {\r\n        let message = JSON.parse(msg.data);\r\n\r\n        // Check the message.\r\n        if( message.id in HANDLERS )\r\n        {\r\n            if( HANDLERS[message.id] === false )\r\n            {\r\n                return;\r\n            }\r\n\r\n            console?.log(\"%c%s%o\", settings.debugStyle, message.id, msg.data);\r\n\r\n            if( HANDLERS[message.id] instanceof Function )\r\n            {\r\n                HANDLERS[message.id](message);\r\n            }\r\n\r\n            emit(message.id, message);\r\n        }\r\n        else\r\n        {\r\n            console?.log(\"%cunknown_message%o\", settings.debugStyle, msg.data);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Send a message to the server.\r\n     * @param {Object} message - The message to send.\r\n     */\r\n    let sendMessage = function( message )\r\n    {\r\n        let msg = JSON.stringify(message);\r\n\r\n        // Log all messages except pings.\r\n        if( message.id !== \"ping\" )\r\n        {\r\n            console?.log(\" %c%s%o\", settings.debugStyle, message.id, msg);\r\n        }\r\n\r\n        _socket.send(msg);\r\n    };\r\n\r\n    /**\r\n     * Event handler called when the connection is closed.\r\n     * @param {EventListener} event - The dispatched event.\r\n     */\r\n    let onClose = function( event )\r\n    {\r\n        // Stop the keep alive routine.\r\n        window.clearTimeout(_keepAliveTimeout);\r\n\r\n        console?.log(\"%cclient_disconnected%o\", settings.debugStyle, _socket.url);\r\n\r\n        emit(\"client_disconnected\", { url: _socket.url });\r\n    };\r\n \r\n    /**\r\n     * Disconnect from the server.\r\n     */\r\n    let disconnect = function()\r\n    {\r\n        _socket?.close();\r\n    };\r\n\r\n    /**\r\n     * Start a keep alive routine.\r\n     */\r\n    let keepAlive = function()\r\n    {\r\n        if( !_socket )\r\n        {\r\n            console?.error(\"Websocket is null\");\r\n            return;\r\n        }\r\n\r\n        // Check whether the connection is open and ready to communicate.\r\n        if( _socket.readyState !== 1 )\r\n        {\r\n            console?.error(\"Connection not open, ready state \" + _socket.readyState);\r\n            return;\r\n        }\r\n\r\n        ping();\r\n\r\n        _keepAliveTimeout = window.setTimeout(keepAlive, settings.pingPeriod);\r\n    };\r\n\r\n    /**\r\n     * Send a ping to the server.\r\n     */\r\n    let ping = function()\r\n    {\r\n        let message = { id: \"ping\" };\r\n        sendMessage(message);\r\n    };\r\n\r\n    /**\r\n     * Login to the server.\r\n     * @param {String} token - The authentication token.\r\n     */\r\n    let login = function( token )\r\n    {\r\n        _token = token;\r\n\r\n        let message = { id: \"login\", token: _token };\r\n        sendMessage(message);\r\n    };\r\n\r\n    /**\r\n     * Logout from the server.\r\n     */\r\n    let logout = function()\r\n    {\r\n        let message = { id: \"logout\", token: _token };\r\n        sendMessage(message);\r\n    };\r\n\r\n    /**\r\n     * Get the current room information.\r\n     */\r\n    let getRoom = function()\r\n    {\r\n        let message = { id: \"get_room\", token: _token };\r\n        sendMessage(message);\r\n    };\r\n\r\n    /**\r\n     * Get the list of room informations.\r\n     */\r\n    let getRooms = function()\r\n    {\r\n        let message = { id: \"get_rooms\", token: _token };\r\n        sendMessage(message);\r\n    };\r\n\r\n    /**\r\n     * Create a room.\r\n     * @param {String} roomId - The room ID.\r\n     */\r\n    let createRoom = function( roomId )\r\n    {\r\n        if( !validateId(roomId) )\r\n        {\r\n            return false;\r\n        }\r\n\r\n        let message = { id: \"create_room\", token: _token, roomId: roomId };\r\n        sendMessage(message);\r\n\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Join a room.\r\n     * @param {String} roomId - The room ID.\r\n     */\r\n    let joinRoom = function( roomId )\r\n    {\r\n        let message = { id: \"join_room\", token: _token, roomId: roomId };\r\n        sendMessage(message);\r\n    };\r\n\r\n    /**\r\n     * Leave the room.\r\n     */\r\n    let leaveRoom = function()\r\n    {\r\n        let message = { id: \"leave_room\", token: _token };\r\n        sendMessage(message);\r\n    };\r\n\r\n    /**\r\n     * Enable a user to the channel.\r\n     * @param {String} channelId - The channel ID.\r\n     */\r\n    let enableChannel = function( userId, channelId )\r\n    {\r\n        let message = { id: \"enable_channel\", token: _token, userId: userId, channelId: channelId };\r\n        sendMessage(message);\r\n    };\r\n\r\n    /**\r\n     * Disable a user from the channel.\r\n     * @param {String} channelId - The channel ID.\r\n     */\r\n    let disableChannel = function( userId, channelId )\r\n    {\r\n        let message = { id: \"disable_channel\", token: _token, userId: userId, channelId: channelId };\r\n        sendMessage(message);\r\n    };\r\n\r\n    /**\r\n     * Join a channel.\r\n     * @param {String} channelId - The channel ID.\r\n     */\r\n    let joinChannel = function( channelId )\r\n    {\r\n        let message = { id: \"join_channel\", token: _token, channelId: channelId };\r\n        sendMessage(message);\r\n    };\r\n\r\n    /**\r\n     * Leave a channel.\r\n     * @param {String} channelId - The channel ID.\r\n     */\r\n    let leaveChannel = function( channelId )\r\n    {\r\n        let message = { id: \"leave_channel\", token: _token, channelId: channelId };\r\n        sendMessage(message);\r\n    };\r\n\r\n    /**\r\n     * Forward a message to other user.\r\n     * @param {String} userId - The user ID.\r\n     * @param {Object} msg - The message to forward.\r\n     */\r\n    let forwardMessage = function( userId, msg )\r\n    {\r\n        if( _userId === userId )\r\n        {\r\n            return;\r\n        }\r\n\r\n        let message = { id: \"forward_message\", token: _token, userId: userId, msg: msg };\r\n        sendMessage(message);\r\n    };\r\n\r\n    /**\r\n     * Returns whether or not the client is disconnected.\r\n     * @returns Whether or not the client is disconnected.\r\n     */\r\n    let isDisconnected = function()\r\n    {\r\n        return !_socket || _socket.readyState === \"3\"; // Closed.\r\n    };\r\n\r\n    /**\r\n     * Returns whether or not the user is logged in this client.\r\n     * @param {String} userId - The user ID.\r\n     * @return Whether or not the user is logged in this client.\r\n     */\r\n    let isLogged = function( userId )\r\n    {\r\n        if( _userId )\r\n        {\r\n            return _userId === userId;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * Returns whether or not the user is joined to the channel.\r\n     * @param {String} channelId - The channel ID.\r\n     * @return Whether or not the user is joined to the channel.\r\n     */\r\n    let isInChannel = function( channelId )\r\n    {\r\n        return channelId in _channels;\r\n    };\r\n\r\n    /**\r\n     * Validates the specified ID following a regular expression.\r\n     * @param {String} str - The ID to validate.\r\n     * @return Whether or not the ID is valid.\r\n     */\r\n    let validateId = function( id )\r\n    {\r\n        if( !id || id === \"\" )\r\n        {\r\n            return false;\r\n        }\r\n\r\n        let regex = new RegExp(\"^([a-zA-Z])(([a-zA-Z0-9]+)([.\\-_]?))*([a-zA-Z0-9])$\");\r\n        return regex.test(id);\r\n    };\r\n\r\n    /**\r\n     * Login response event handler.\r\n     * @param {Object} event - The event object.\r\n     */\r\n    let onLoginResponse = function( event )\r\n    {\r\n        if( event.status === \"ok\" )\r\n        {\r\n            _userId = event.userId;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Logout response event handler.\r\n     * @param {Object} event - The event object.\r\n     */\r\n    let onLogoutResponse = function( event )\r\n    {\r\n        if( event.status === \"ok\" )\r\n        {\r\n            _token = null;\r\n            _userId = null;\r\n            _roomId = null;\r\n            _channels = { };\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Create room response event handler.\r\n     * @param {Object} event - The event object.\r\n     */\r\n    let onCreateRoomResponse = function( event )\r\n    {\r\n        if( event.status === \"ok\" )\r\n        {\r\n            _roomId = event.roomId;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Join room response event handler.\r\n     * @param {Object} event - The event object.\r\n     */\r\n    let onJoinRoomResponse = function( event )\r\n    {\r\n        if( event.status === \"ok\" )\r\n        {\r\n            _roomId = event.roomId;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Leave room response event handler.\r\n     * @param {Object} event - The event object.\r\n     */\r\n    let onLeaveRoomResponse = function( event )\r\n    {\r\n        if( event.status === \"ok\" )\r\n        {\r\n            _roomId = null;\r\n            _channels = { };\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Channel disabled event handler.\r\n     * @param {Object} event - The event object.\r\n     */\r\n    let onChannelDisabled = function( event )\r\n    {\r\n        if( event.userId !== _userId )\r\n        {\r\n            return;\r\n        }\r\n\r\n        if( event.channelId in _channels )\r\n        {\r\n            delete _channels[event.channelId];\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Join channel response event handler.\r\n     * @param {Object} event - The event object.\r\n     */\r\n    let onJoinChannelResponse = function( event )\r\n    {\r\n        if( event.status === \"ok\" )\r\n        {\r\n            _channels[event.channelId] = true;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Leave channel response event handler.\r\n     * @param {Object} event - The event object.\r\n     */\r\n    let onLeaveChannelResponse = function( event )\r\n    {\r\n        if( event.status === \"ok\" )\r\n        {\r\n            delete _channels[event.channelId];\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handlers used to listen messages from the server.\r\n     *      function - The message is valid, emitted and handled.\r\n     *      true - The message is valid, emitted and not handled.\r\n     *      false - The message is valid, not emitted and not handled.\r\n     *      undefined - The message is not valid.\r\n     */\r\n    const HANDLERS =\r\n    {\r\n        \"pong\":                         false,\r\n        \"login_response\":               onLoginResponse,\r\n        \"logout_response\":              onLogoutResponse,\r\n        \"get_room_response\":            true,\r\n        \"get_rooms_response\":           true,\r\n        \"create_room_response\":         onCreateRoomResponse,\r\n        \"room_created\":                 true,\r\n        \"join_room_response\":           onJoinRoomResponse,\r\n        \"guest_joined_room\":            true,\r\n        \"user_joined_room\":             true,\r\n        \"leave_room_response\":          onLeaveRoomResponse,\r\n        \"master_left_room\":             true,\r\n        \"guest_left_room\":              true,\r\n        \"user_left_room\":               true,\r\n        \"room_deleted\":                 true,\r\n        \"enable_channel_response\":      true,\r\n        \"channel_enabled\":              true,\r\n        \"disable_channel_response\":     true,\r\n        \"channel_disabled\":             onChannelDisabled,\r\n        \"join_channel_response\":        onJoinChannelResponse,\r\n        \"user_joined_channel\":          true,\r\n        \"leave_channel_response\":       onLeaveChannelResponse,\r\n        \"user_left_channel\":            true,\r\n        \"forward_message_response\":     true,\r\n        \"remote_message\":               true\r\n    };\r\n\r\n//#endregion\r\n\r\n//#region PUBLIC\r\n\r\n    return {\r\n        on,\r\n        off,\r\n        connect,\r\n        disconnect,\r\n        login,\r\n        logout,\r\n        getRoom,\r\n        getRooms,\r\n        createRoom,\r\n        joinRoom,\r\n        leaveRoom,\r\n        enableChannel,\r\n        disableChannel,\r\n        joinChannel,\r\n        leaveChannel,\r\n        forwardMessage,\r\n        isDisconnected,\r\n        isLogged,\r\n        isInChannel\r\n    };\r\n\r\n//#endregion\r\n}\r\n","export function MediaAdapter( settings )\r\n{\r\n    let defaultSettings =\r\n    {\r\n        debug: false,\r\n        debugStyle: \"background: hsla(0, 0%, 13%, 1); color: hsla(13, 89%, 45%, 1)\",\r\n    };\r\n\r\n    settings = (typeof settings !== \"object\") ? { } : settings;\r\n    settings = Object.assign({ }, defaultSettings, settings);\r\n\r\n    let console = (settings.debug) ? window.console : null;\r\n\r\n    let events = { };\r\n    let blackCanvas = null;\r\n    let audioStream = null;\r\n    let videoStream = null;\r\n    let mediaStream = null;\r\n\r\n    let audioDevices = { }; // audioDevices[label] = deviceId\r\n    let videoDevices = { }; // videoDevices[label] = deviceId\r\n\r\n    let resolutions =\r\n    {\r\n        \"Undefined\":    { width: undefined,\theight: undefined },\r\n        \"320x240\":      { width: 320,\theight: 240 },\t// QVGA 4:3\r\n        \"640x360\":      { width: 640,\theight: 360 },\t// nHD 16:9\r\n        \"640x480\":      { width: 640,\theight: 480 },\t// VGA 4:3\r\n        \"1280x720\":     { width: 1280,\theight: 720 },\t// HD 16:9\r\n        \"1920x1080\":    { width: 1920,\theight: 1080 },\t// FullHD 16:9\r\n        \"3840x2160\":    { width: 3840,\theight: 2160 },\t// 4k 16:9\r\n        \"7680x4320\":    { width: 7680,\theight: 4320 }\t// 8k 16:9\r\n    };\r\n\r\n    let audioConstraints =\r\n    {\r\n        audio:\r\n        {\r\n            deviceId: { exact: undefined }\r\n        }\r\n    };\r\n\r\n    let videoConstraints =\r\n    {\r\n        video:\r\n        {\r\n            deviceId: { exact: undefined },\r\n            width: { exact: undefined },\r\n            height: { exact: undefined },\r\n            frameRate: { ideal: 60 }\r\n        }\r\n    };\r\n\r\n    let streamSettings =\r\n    {\r\n        audio: null, // label\r\n        video: null, // label\r\n        resolution: null, // resolutions key\r\n    };\r\n\r\n    let previousAudioConstraints = null;\r\n    let previousVideoConstraints = null;\r\n\r\n    /**\r\n     * Add a function that will be called whenever the specified event is emitted.\r\n     * @param {String} event - The event name.\r\n     * @param {Function} listener - The function to add.\r\n     */\r\n    let on = function( event, listener )\r\n    {\r\n        if( typeof events[event] !== \"object\" )\r\n        {\r\n            events[event] = [];\r\n        }\r\n\r\n        events[event].push(listener);\r\n    };\r\n\r\n    /**\r\n     * Remove the function previously added to be called whenever the specified event is emitted.\r\n     * @param {String} event - The event name.\r\n     * @param {Function} listener - The previously added function.\r\n     */\r\n    let off = function( event, listener )\r\n    {   \r\n        if( typeof events[event] === \"object\" )\r\n        {\r\n            let index = events[event].indexOf(listener);\r\n            if( index > -1 )\r\n            {\r\n                events[event].splice(index, 1);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Emit the specified event.\r\n     * @param {String} event - The event name.\r\n     */\r\n    let emit = function( event )\r\n    {\r\n        let args = [].slice.call(arguments, 1);\r\n\r\n        if( typeof events[event] === \"object\" )\r\n        {\r\n            let listeners = events[event].slice();\r\n            for( let i = 0; i < listeners.length; i++ )\r\n            {\r\n                listeners[i].apply(this, args);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Start the media adapter.\r\n     */\r\n    let start = function()\r\n    {\r\n        if( !navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices )\r\n        {\r\n            console?.log(\"%c\" + \"Media Devices Error\" + \"%o\", settings.debugStyle, \"Media devices are not available\");\r\n            return false;\r\n        }\r\n\r\n        // Create a dummy stream.\r\n        audioStream = getSilenceStream();\r\n        videoStream = getBlackStream();\r\n        mediaStream = mixStreams(audioStream, videoStream);\r\n\r\n        let initialize = async function()\r\n        {\r\n            const catchCallback = error => console?.trace(\"%c\" + \"Media Devices Error\" + \"%o\", settings.debugStyle, error);\r\n\r\n            await window.navigator.mediaDevices.getUserMedia({ audio: true }).catch(catchCallback);\r\n            await window.navigator.mediaDevices.getUserMedia({ video: true }).catch(catchCallback);\r\n            await findDevices().catch(catchCallback);\r\n            await setDefaultDevices().catch(catchCallback);\r\n        };\r\n\r\n        initialize();\r\n\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Find the available media input and output devices.\r\n     */\r\n    let findDevices = async function()\r\n    {\r\n        return getDevices().then(gotDevices).catch(errorDevices);\r\n    };\r\n\r\n    /**\r\n     * Set the default devices.\r\n     */\r\n    let setDefaultDevices = async function()\r\n    {\r\n        // Try to get the media configuration from the local storage\r\n        // or use the default values.\r\n\r\n        let audio = window.localStorage.getItem(\"audio\") || \"None\";\r\n        if( !(audio in audioDevices) )\r\n        {\r\n            audio = \"None\";\r\n            window.localStorage.removeItem(\"audio\");\r\n        }\r\n\r\n        let video = window.localStorage.getItem(\"video\") || \"None\";\r\n        if( !(video in videoDevices) )\r\n        {\r\n            video = \"None\";\r\n            window.localStorage.removeItem(\"video\");\r\n        }\r\n\r\n        try\r\n        {\r\n            await setAudio(audio);\r\n            try\r\n            {\r\n                await setVideo(video);\r\n            }\r\n            catch( error )\r\n            {\r\n                setVideo(\"None\");\r\n            }\r\n        }\r\n        catch( error )\r\n        {\r\n            await setAudio(\"None\");\r\n            try\r\n            {\r\n                await setVideo(video);\r\n            }\r\n            catch( error )\r\n            {\r\n                setVideo(\"None\");\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Request a list of the available media input and output devices.\r\n     */\r\n    let getDevices = function()\r\n    {\r\n        return window.navigator.mediaDevices.enumerateDevices();\r\n    };\r\n\r\n    /**\r\n     * Success handler of the get devices function.\r\n     * @param {MediaDeviceInfo[]} deviceInfos - The collection of device infos.\r\n     */\r\n    let gotDevices = function( deviceInfos )\r\n    {\r\n        audioDevices = { };\r\n        videoDevices = { };\r\n\r\n        // Add inputs for silence and black streams.\r\n        audioDevices[\"None\"] = \"\";\r\n        videoDevices[\"None\"] = \"\";\r\n\r\n        let a = 0, v = 0;\r\n        for( let deviceInfo of deviceInfos )\r\n        {\r\n            if( deviceInfo.kind === \"audioinput\" )\r\n            {\r\n                let label = (deviceInfo.label === \"\" ) ? (\"Audio input \" + a) : deviceInfo.label;\r\n                audioDevices[label] = deviceInfo.deviceId;\r\n                a++;\r\n            }\r\n\r\n            if( deviceInfo.kind === \"videoinput\" )\r\n            {\r\n                let label = (deviceInfo.label === \"\" ) ? (\"Video input \" + v) : deviceInfo.label;\r\n                videoDevices[label] = deviceInfo.deviceId;\r\n                v++;\r\n            }\r\n        }\r\n\r\n        console?.log(\"%c\" + \"Device Infos\" + \"%o\", settings.debugStyle, JSON.stringify(deviceInfos));\r\n        console?.log(\"%c\" + \"got_devices\" + \"%o%o%o\", settings.debugStyle, JSON.stringify(audioDevices), JSON.stringify(videoDevices), JSON.stringify(streamSettings));\r\n        console?.log(\"%c\" + \"got_resolutions\" + \"%o%o\", settings.debugStyle, JSON.stringify(resolutions), JSON.stringify(streamSettings));\r\n\r\n        emit(\"got_devices\",     { audioDevices: audioDevices, videoDevices: videoDevices, settings: streamSettings });\r\n        emit(\"got_resolutions\", { resolutions: resolutions, settings: streamSettings });\r\n    };\r\n\r\n    /**\r\n     * Error handler of the get devices function.\r\n     * @param {Error} error - The catched error.\r\n     */\r\n    let errorDevices = function( error )\r\n    {\r\n        let description = \"Device request not allowed in the browser context.\";\r\n\r\n        console?.log(\"%c\" + \"error_devices\" + \"%o%o\", settings.debugStyle, error, description);\r\n\r\n        emit(\"error_devices\", { error: error, description: description });\r\n    };\r\n\r\n    /**\r\n     * Set the audio device.\r\n     * @param {String} device - The audio device.\r\n     */\r\n    let setAudio = function( device )\r\n    {\r\n        // Check whether the device exists.\r\n        if( !(device in audioDevices) )\r\n        {\r\n            return Promise.resolve(new Error(\"Device \" + device + \" doesn't exist\"));\r\n        }\r\n\r\n        // Check whether the device is not already selected.\r\n        if( device === streamSettings.audio )\r\n        {\r\n            return Promise.resolve(new Error(\"Device \" + device + \" already selected\"));\r\n        }\r\n\r\n        if( device === \"None\" )\r\n        {\r\n            // Update settings.\r\n            streamSettings.audio = device;\r\n\r\n            // Save settings.\r\n            window.localStorage.setItem(\"audio\", streamSettings.audio);\r\n\r\n            // Get dummy stream.\r\n            audioStream = getSilenceStream();\r\n            mediaStream = mixStreams(audioStream, videoStream);\r\n\r\n            console?.log(\"%c\" + \"got_stream\" + \"%o%o\", settings.debugStyle, mediaStream, JSON.stringify(streamSettings));\r\n\r\n            emit(\"got_stream\", { stream: mediaStream, settings: streamSettings });\r\n\r\n            return Promise.resolve(mediaStream);\r\n        }\r\n        else\r\n        {\r\n            // Save previous audio constraints.\r\n            previousAudioConstraints = clone(audioConstraints);\r\n\r\n            // Update audio device constraints.\r\n            let deviceId = audioDevices[device];\r\n            audioConstraints.audio.deviceId.exact = deviceId;\r\n\r\n            return getAudioStream();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set the video device and resolution.\r\n     * @param {String} device - The video device.\r\n     * @param {String} resolution - The video resolution.\r\n     */\r\n    let setVideo = function( device, resolution = \"640x480\" )\r\n    {\r\n        // Check whether the device exists.\r\n        if( !(device in videoDevices) )\r\n        {\r\n            return Promise.resolve(new Error(\"Device \" + device + \" doesn't exist\"));\r\n        }\r\n\r\n        // Check whether the resolution exists.\r\n        if( !(resolution in resolutions) )\r\n        {\r\n            return Promise.resolve(new Error(\"Resolution \" + resolution + \" doesn't exist\"));\r\n        }\r\n\r\n        // Check whether the device and resolution is not already selected.\r\n        if( device === streamSettings.video && resolution === streamSettings.resolution )\r\n        {\r\n            return Promise.resolve(new Error(\"Device \" + device + \" and resolution \" + resolution + \" already selected\"));\r\n        }\r\n\r\n        if( device === \"None\" )\r\n        {\r\n            // Update settings.\r\n            streamSettings.video = device;\r\n            streamSettings.resolution = resolution;\r\n\r\n            // Save settings.\r\n            window.localStorage.setItem(\"video\", streamSettings.video);\r\n\r\n            // Get dummy stream.\r\n            let width = resolutions[resolution].width;\r\n            let height = resolutions[resolution].height;\r\n            videoStream = getBlackStream(width, height);\r\n            mediaStream = mixStreams(audioStream, videoStream);\r\n\r\n            console?.log(\"%c\" + \"got_stream\" + \"%o%o\", settings.debugStyle, mediaStream, JSON.stringify(streamSettings));\r\n\r\n            emit(\"got_stream\", { stream: mediaStream, settings: streamSettings });\r\n\r\n            return Promise.resolve(mediaStream);\r\n        }\r\n        else\r\n        {\r\n            // Save previous video constraints.\r\n            previousVideoConstraints = clone(videoConstraints);\r\n\r\n            // Update video device constraints.\r\n            let deviceId = videoDevices[device];\r\n            videoConstraints.video.deviceId.exact = deviceId;\r\n\r\n            // Update video resolution constraints.\r\n            let width = resolutions[resolution].width;\r\n            let height = resolutions[resolution].height;\r\n            videoConstraints.video.width.exact = width;\r\n            videoConstraints.video.height.exact = height;\r\n\r\n            return getVideoStream();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Return a silence audio track.\r\n     * @return {MediaStreamTrack} The silence audio track.\r\n     */\r\n    let getSilenceTrack = function()\r\n    {\r\n        let audioContext = new AudioContext();\r\n\r\n        let gainNode = audioContext.createGain();\r\n        let oscillatorNode = audioContext.createOscillator();\r\n        oscillatorNode.connect(gainNode);\r\n        let destination = gainNode.connect(audioContext.createMediaStreamDestination());\r\n\r\n        gainNode.gain.setValueAtTime(0, audioContext.currentTime);\r\n        oscillatorNode.start();\r\n\r\n        let stream = destination.stream;\r\n        let audioTrack = stream.getAudioTracks()[0];\r\n\r\n        return audioTrack;\r\n    };\r\n\r\n    /**\r\n     * Return a black video track.\r\n     * @param {Number} width - The video track width.\r\n     * @param {Number} height - The video track height.\r\n     * @return {MediaStreamTrack} The black video track.\r\n     */\r\n    let getBlackTrack = function( width = 320, height = 240 )\r\n    {\r\n        if( !blackCanvas )\r\n        {\r\n            blackCanvas = window.document.createElement(\"canvas\");\r\n        }\r\n\r\n        blackCanvas.width = width;\r\n        blackCanvas.height = height;\r\n        let context = blackCanvas.getContext(\"2d\");\r\n        context.fillRect(0, 0, width, height);\r\n\r\n        let stream = blackCanvas.captureStream();\r\n        let videoTrack = stream.getVideoTracks()[0];\r\n\r\n        return videoTrack;\r\n    };\r\n\r\n    /**\r\n     * Return a silenced audio stream.\r\n     */\r\n    let getSilenceStream = function()\r\n    {\r\n        return new MediaStream([getSilenceTrack()]);\r\n    };\r\n\r\n    /**\r\n     * Return a black video stream.\r\n     * @param {Number} width - The video stream width.\r\n     * @param {Number} height - The video stream height.\r\n     */\r\n    let getBlackStream = function( width = 320, height = 240 )\r\n    {\r\n        return new MediaStream([getBlackTrack(width, height)]);\r\n    };\r\n\r\n    /**\r\n     * Request an audio stream.\r\n     */\r\n    let getAudioStream = function()\r\n    {\r\n        console?.log(\"%c\" + \"Get Audio Stream\" + \"%o\", settings.debugStyle, JSON.stringify(audioConstraints));\r\n\r\n        mediaStream = null;\r\n        stopStream(audioStream);\r\n\r\n        return window.navigator.mediaDevices.getUserMedia(audioConstraints).then(gotAudioStream).catch(function( error )\r\n        {\r\n            errorAudioStream(error);\r\n            throw error;\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Request a video stream.\r\n     */\r\n    let getVideoStream = function()\r\n    {\r\n        console?.log(\"%c\" + \"Get Video Stream\" + \"%o\", settings.debugStyle, JSON.stringify(videoConstraints));\r\n\r\n        mediaStream = null;\r\n        stopStream(videoStream);\r\n\r\n        return window.navigator.mediaDevices.getUserMedia(videoConstraints).then(gotVideoStream).catch(function( error )\r\n        {\r\n            errorVideoStream(error);\r\n            throw error;\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Success handler of the get audio stream function.\r\n     * @param {MediaStream} stream - The audio stream.\r\n     */\r\n    let gotAudioStream = async function( stream )\r\n    {\r\n        // Audio track.\r\n        let audioTrack = stream.getAudioTracks()[0];\r\n        let audioTrackSettings = audioTrack.getSettings();\r\n        console?.log(\"%c\" + \"Audio Track\" + \"%o%o\", settings.debugStyle, JSON.stringify(audioTrack.label), JSON.stringify(audioTrackSettings));\r\n\r\n        // Check whether the label is listed, enumerateDevices returns an empty label if the permission for accessing the mediadevice is not given.\r\n        if( !(audioTrack.label in audioDevices) )\r\n        {\r\n            await findDevices();\r\n        }\r\n\r\n        // Update settings.\r\n        streamSettings.audio = audioTrack.label;\r\n\r\n        // Save settings.\r\n        window.localStorage.setItem(\"audio\", streamSettings.audio);\r\n\r\n        audioStream = stream;\r\n        mediaStream = mixStreams(audioStream, videoStream);\r\n\r\n        console?.log(\"%c\" + \"Audio Constraints\" + \"%o\", settings.debugStyle, JSON.stringify(audioConstraints));\r\n        console?.log(\"%c\" + \"got_stream\" + \"%o%o\", settings.debugStyle, mediaStream, JSON.stringify(streamSettings));\r\n\r\n        emit(\"got_stream\", { stream: mediaStream, settings: streamSettings });\r\n    };\r\n\r\n    /**\r\n     * Success handler of the get video stream function.\r\n     * @param {MediaStream} stream - The video stream.\r\n     */\r\n    let gotVideoStream = async function( stream )\r\n    {\r\n        // Video track.\r\n        let videoTrack = stream.getVideoTracks()[0];\r\n        let videoTrackSettings = videoTrack.getSettings();\r\n        console?.log(\"%c\" + \"Video Track\" + \"%o%o\", settings.debugStyle, JSON.stringify(videoTrack.label), JSON.stringify(videoTrackSettings));\r\n\r\n        // Check whether the label is listed, enumerateDevices returns an empty label if the permission for accessing the mediadevice is not given.\r\n        if( !(videoTrack.label in videoDevices) )\r\n        {\r\n            await findDevices();\r\n        }\r\n\r\n        // Check whether the resolution is already listed.\r\n        let width = videoTrackSettings.width;\r\n        let height = videoTrackSettings.height;\r\n        let resolution = width + \"x\" + height;\r\n        if( !resolutions[resolution] )\r\n        {\r\n            // Add the resolution.\r\n            resolutions[resolution] = { width: width, height: height };\r\n\r\n            // Sort resolutions.\r\n            resolutions = Object.entries(resolutions).sort((a, b) => (a[1].width || Number.NEGATIVE_INFINITY) > (b[1].width || Number.NEGATIVE_INFINITY)).reduce((r, [k, v]) => ({ ...r, [k]: v }), {});\r\n\r\n            emit(\"got_resolutions\", { resolutions: resolutions, settings: streamSettings });\r\n        }\r\n\r\n        // Update video constraints.\r\n        videoConstraints.video.width.exact = width;\r\n        videoConstraints.video.height.exact = height;\r\n\r\n        // Update settings.\r\n        streamSettings.video = videoTrack.label;\r\n        streamSettings.resolution = resolution;\r\n\r\n        // Save settings.\r\n        window.localStorage.setItem(\"video\", streamSettings.video);\r\n\r\n        videoStream = stream;\r\n        mediaStream = mixStreams(audioStream, videoStream);\r\n\r\n        console?.log(\"%c\" + \"Video Constraints\" + \"%o\", settings.debugStyle, JSON.stringify(videoConstraints));\r\n        console?.log(\"%c\" + \"got_stream\" + \"%o%o\", settings.debugStyle, mediaStream, JSON.stringify(streamSettings));\r\n\r\n        emit(\"got_stream\", { stream: mediaStream, settings: streamSettings });\r\n    };\r\n\r\n    /**\r\n     * Return a semantic error string from the specified error.\r\n     * @param {Error} error - The catched error.\r\n     */\r\n    let errorStream = function( error )\r\n    {\r\n        let description = \"\";\r\n        if( error.name === \"NotFoundError\" || error.name === \"DevicesNotFoundError\" )\r\n        {\r\n            description = \"Required track is missing.\";\r\n        }\r\n        else if( error.name === \"NotReadableError\" || error.name === \"TrackStartError\" )\r\n        {\r\n            description = \"Microphone or Webcam are already in use.\";\r\n        }\r\n        else if( error.name === \"OverconstrainedError\" || error.name === \"ConstraintNotSatisfiedError\" )\r\n        {\r\n            description = \"Constraints cannot be satisfied.\";\r\n        }\r\n        else if( error.name === \"NotAllowedError\" || error.name === \"PermissionDeniedError\" )\r\n        {\r\n            description = \"Permission denied in browser.\";\r\n        }\r\n        else if( error.name === \"TypeError\" || error.name === \"TypeError\" )\r\n        {\r\n            description = \"Empty constraints object.\";\r\n        }\r\n        else\r\n        {\r\n            description = \"Unknown error.\";\r\n        }\r\n\r\n        return description + \" \" + error.message;\r\n    };\r\n\r\n    /**\r\n     * Error handler of the get audio stream function.\r\n     * @param {Error} error - The catched error.\r\n     */\r\n    let errorAudioStream = function( error )\r\n    {\r\n        let description = errorStream(error);\r\n\r\n        console?.log(\"%c\" + \"Error Constraints\" + \"%o\", settings.debugStyle, JSON.stringify(audioConstraints));\r\n        console?.log(\"%c\" + \"error_stream\" + \"%o%o%o\", settings.debugStyle, error.name, description, JSON.stringify(streamSettings));\r\n\r\n        emit(\"error_stream\", { error: error.name, description: description, settings: streamSettings });\r\n\r\n        if( previousAudioConstraints )\r\n        {\r\n            audioConstraints = clone(previousAudioConstraints);\r\n            previousAudioConstraints = null;\r\n            getAudioStream();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Error handler of the get video stream function.\r\n     * @param {Error} error - The catched error.\r\n     */\r\n    let errorVideoStream = function( error )\r\n    {\r\n        let description = errorStream(error);\r\n\r\n        console?.log(\"%c\" + \"Error Constraints\" + \"%o\", settings.debugStyle, JSON.stringify(videoConstraints));\r\n        console?.log(\"%c\" + \"error_stream\" + \"%o%o%o\", settings.debugStyle, error.name, description, JSON.stringify(streamSettings));\r\n\r\n        emit(\"error_stream\", { error: error.name, description: description, settings: streamSettings });\r\n\r\n        if( previousVideoConstraints )\r\n        {\r\n            videoConstraints = clone(previousVideoConstraints);\r\n            previousVideoConstraints = null;\r\n            getVideoStream();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Mix two streams with 1 audio and 1 video tracks into one.\r\n     * @param {MediaStream} audioStream - The stream with the audio track.\r\n     * @param {MediaStream} videoStream - The stream with the video track.\r\n     * @return {MediaStream} The mixed stream.\r\n     */\r\n    let mixStreams = function( audioStream, videoStream )\r\n    {\r\n        if( !audioStream || !(audioStream instanceof MediaStream) )\r\n        {\r\n            return null;\r\n        }\r\n\r\n        if( !videoStream || !(videoStream instanceof MediaStream) )\r\n        {\r\n            return null;\r\n        }\r\n\r\n        let audioTracks = audioStream.getAudioTracks();\r\n        if( !audioTracks || audioTracks.length === 0 )\r\n        {\r\n            return null;\r\n        }\r\n\r\n        let videoTracks = videoStream.getVideoTracks();\r\n        if( !videoTracks || videoTracks.length === 0 )\r\n        {\r\n            return null;\r\n        }\r\n\r\n        let stream = new MediaStream();\r\n        stream.addTrack(audioTracks[0]);\r\n        stream.addTrack(videoTracks[0]);\r\n\r\n        return stream;\r\n    };\r\n\r\n    /**\r\n     * Stop a stream, stopping its tracks.\r\n     * @param {MediaStream} stream - The stream to stop.\r\n     */\r\n    let stopStream = function( stream )\r\n    {\r\n        if( !stream || !(stream instanceof MediaStream) )\r\n        {\r\n            return;\r\n        }\r\n\r\n        stream.getTracks().forEach(track => track.stop());\r\n    };\r\n\r\n    /**\r\n     * Return a clone of the object.\r\n     * @param {Object} object - The object to clone.\r\n     * @return {Object} The clone of the object.\r\n     */\r\n    let clone = function( object )\r\n    {\r\n        return JSON.parse(JSON.stringify(object));\r\n    };\r\n\r\n    return {\r\n        on,\r\n        off,\r\n        start,\r\n        findDevices,\r\n        getDevices,\r\n        setAudio,\r\n        setVideo\r\n    };\r\n}","export function DummyStream()\r\n{\r\n//#region PRIVATE\r\n\r\n    let _blackCanvas = null;\r\n    let _silenceStream = null;\r\n    let _blackStream = null;\r\n    let _silenceTrack = null\r\n    let _blackTrack = null;\r\n\r\n    /**\r\n     * Create a silence audio track.\r\n     */\r\n    let createSilenceTrack = function()\r\n    {\r\n        let audioContext = new AudioContext();\r\n\r\n        let gainNode = audioContext.createGain();\r\n        let oscillatorNode = audioContext.createOscillator();\r\n        oscillatorNode.connect(gainNode);\r\n        let destination = gainNode.connect(audioContext.createMediaStreamDestination());\r\n\r\n        _silenceStream = destination.stream;\r\n        _silenceTrack = _silenceStream.getAudioTracks()[0];\r\n    };\r\n\r\n    /**\r\n     * Create a black video track.\r\n     * @param {Number} width - The video width.\r\n     * @param {Number} height - The video height.\r\n     */\r\n    let createBlackTrack = function( width = 320, height = 240 )\r\n    {\r\n        if( !_blackCanvas )\r\n        {\r\n            _blackCanvas = window.document.createElement(\"canvas\");\r\n        }\r\n\r\n        _blackCanvas.width = width;\r\n        _blackCanvas.height = height;\r\n        let context = _blackCanvas.getContext(\"2d\");\r\n        context.fillRect(0, 0, width, height);\r\n\r\n        _blackStream = _blackCanvas.captureStream();\r\n        _blackTrack = _blackStream.getVideoTracks()[0];\r\n    };\r\n\r\n    createSilenceTrack();\r\n    createBlackTrack();\r\n    let _stream = new MediaStream([_silenceTrack, _blackTrack]);\r\n\r\n    /**\r\n     * Return the audio track.\r\n     * @returns {MediaStreamTrack} The audio track.\r\n     */\r\n    let getAudioTrack = function()\r\n    {\r\n        return _silenceTrack;\r\n    };\r\n\r\n    /**\r\n     * Return the video track.\r\n     * @returns {MediaStreamTrack} The video track.\r\n     */\r\n    let getVideoTrack = function()\r\n    {\r\n        return _blackTrack;\r\n    };\r\n\r\n    /**\r\n     * Return the stream.\r\n     * @returns {MediaStream} The stream.\r\n     */\r\n    let getStream = function()\r\n    {\r\n        return _stream;\r\n    };\r\n\r\n//#endregion\r\n\r\n//#region PUBLIC\r\n\r\n    return {\r\n        getAudioTrack,\r\n        getVideoTrack,\r\n        getStream\r\n    };\r\n\r\n//#endregion\r\n}","\r\nlet http = {\r\n    get: async function(url) {\r\n        return fetch(url)\r\n        .then(response => response.json());\r\n    },\r\n\r\n    post: async function(url, data) {\r\n        return fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then( response => response.json() );\r\n    },\r\n}\r\n\r\nexport default http;","import * as BRA from \"lib_bra\";\r\nimport cookies from '@h3r/cookies'\r\nimport toast from 'react-hot-toast'\r\nimport React, { createContext, useEffect, useState } from 'react'\r\nimport http from \"utils/http\"\r\n//import { useHistory } from 'react-router-dom';\r\n\r\nexport const AuthenticationContext = createContext(); \r\n\r\nexport default ({children, ...props}) => {\r\n    //const [state, setState] = useState(0);\r\n    //const history                       = useHistory();\r\n    const [ isAdmin,     setAdmin     ] = useState(false);\r\n    const [ isLogged,    setLogged    ] = useState(false);\r\n    const [ isConnected, setConnected ] = useState({app:false, rtc:false});\r\n    const [ user,        setUser      ] = useState(null);\r\n    const [ token,       setToken     ] = useState(null);\r\n    const [ avatar,      setAvatar    ] = useState(null);\r\n\r\n    const store = {\r\n         user       \r\n        ,token      \r\n        ,avatar     \r\n        ,isAdmin    \r\n        ,isConnected: isConnected.app && isConnected.rtc\r\n        ,isLogged\r\n        ,login\r\n        ,logout\r\n    }\r\n\r\n    function login(email, password){\r\n        return doLogIn(email.toLowerCase(), password);\r\n    }\r\n\r\n    async function doLogIn(email, password) {\r\n        const toastId = toast.loading('Logging in...');\r\n        return http.post(`${process.env.REACT_APP_API_URL}/auth/basic`, { email, password })\r\n        .then(response => {\r\n            switch (response.status) {\r\n                case 404: toast.error(`Error ${response.error}: ${response.message}`, { id: toastId }); break;\r\n                default:  toast.success('Success', { id: toastId });\r\n                    BRA.appClient.login(response.access_token);\r\n                    setToken(response.access_token);\r\n                    return response.access_token;\r\n            }\r\n        })\r\n        .catch(err => toast.error(`Error catch: ${err}`, { id: toastId }));\r\n    }\r\n\r\n    async function logout(){\r\n        cookies.get(\"admire_app_email\",null,-1);\r\n        cookies.get(\"admire_app_token\",null,0);\r\n        return await BRA.appClient.logout();\r\n    }\r\n\r\n    function onLogin({ status, userId, userType, description }) {\r\n        switch (status) {\r\n            case 'ok': toast.success(`Logged in as '${userId}'`);\r\n                BRA.rtcClient.register(userId);\r\n                window.userId = userId;\r\n\r\n                setLogged(true);\r\n                setUser(userId);\r\n                setAdmin(userType);\r\n                break;\r\n            case 'error': \r\n                toast.error(description); \r\n                cookies.set(\"admire_app_token\",null,-1);\r\n                break;\r\n            default: toast.warn(description);\r\n        }\r\n    }\r\n\r\n    function onLogOut(){\r\n        setLogged(false);\r\n        toast.success('Logged out');\r\n        BRA.rtcClient.unregister();\r\n    }\r\n\r\n    useEffect( ()=>{\r\n\r\n        function onUnload(){\r\n            BRA.rtcClient.disconnect();\r\n            BRA.appClient.disconnect(); \r\n            window.removeEventListener('unload', onUnload);\r\n        }\r\n        window.addEventListener('unload', onUnload);\r\n\r\n        let onAppConnect, onAppDisconnect, onRtcConnect, onRtcDisconnect;\r\n        BRA.appClient.on('client_connected',      onAppConnect      = () => { toast(\"App Connected\",    {icon:'⚡'}); setConnected( v => ({...v, app:true })); });\r\n        BRA.appClient.on('client_disconnected',   onAppDisconnect   = () => { toast(\"App Disconnected\", {icon:'⚠️'}); setConnected( v => ({...v, app:false})); });\r\n        BRA.rtcClient.on('client_connected',      onRtcConnect      = () => { toast(\"RTC Connected\",    {icon:'⚡'}); setConnected( v => ({...v, rtc:true })); });\r\n        BRA.rtcClient.on('client_disconnected',   onRtcDisconnect   = () => { toast(\"RTC Disconnected\", {icon:'⚠️'}); setConnected( v => ({...v, rtc:false})); });\r\n        BRA.appClient.on(\"login_response\",        onLogin);\r\n        BRA.appClient.on(\"logout_response\",       onLogOut);\r\n\r\n\r\n        BRA.appClient.connect(process.env.REACT_APP_APP_URL);\r\n        BRA.rtcClient.connect(process.env.REACT_APP_RTC_URL);\r\n\r\n    return ()=>{\r\n        BRA.appClient.off('client_connected',     onAppConnect      );\r\n        BRA.appClient.off('client_disconnected',  onAppDisconnect   );\r\n        BRA.rtcClient.off('client_connected',     onRtcConnect      );\r\n        BRA.rtcClient.off('client_disconnected',  onRtcDisconnect   );\r\n        BRA.appClient.off(\"login_response\",       onLogin);\r\n        BRA.appClient.off(\"logout_response\",      onLogOut);\r\n\r\n        onUnload();\r\n    }\r\n    }, []);\r\n\r\n    useEffect( ()=>{\r\n        const {app, rtc} = isConnected;\r\n        if(app && rtc)\r\n        {\r\n            const access_token = cookies.get(\"admire_app_token\")\r\n            if(access_token)BRA.appClient.login(access_token);\r\n        }\r\n        \r\n    }, [isConnected.app, isConnected.rtc]);\r\n\r\n\r\n    return <AuthenticationContext.Provider value={store} children={children}/>\r\n}","import { useState, useEffect } from 'react'\r\nimport { NavLink, useHistory } from \"react-router-dom\"\r\n\r\nfunction Nav({buttons, children}){\r\n    const history = useHistory()\r\n    const [active, setActive] = useState(0);\r\n    let i = 0;\r\n    \r\n    function onKeyPressed(e)\r\n    {\r\n        const v = e.keyCode-49;\r\n        \r\n        if(v >= 0 && v < children.length && !children[v].props.disabled)\r\n        {\r\n            history.push(children[v].props.to ?? \"/\");\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        document.addEventListener(\"keydown\", onKeyPressed)\r\n    return ()=>{\r\n        document.removeEventListener(\"keydown\", onKeyPressed)\r\n    }}, [])\r\n\r\n    return <>\r\n        <div className=\"nav-partial px-3 d-flex justify-content-evenly align-items-center position-absolute bottom-0 start-50 translate-middle-x mb-3 shadow rounded-5 bg-light\" style={{ zIndex: 1100}}>\r\n            {children.filter( (v,k,a) => k < a.length/2 ).map( (v,k,a) => { \r\n                const ret = <div id={k} key={k} onClick={ !v.props.disabled? (() => setActive(k)) : undefined }>{v}</div>\r\n                ++i;\r\n                return ret;\r\n            })}\r\n            {buttons && buttons}\r\n            {children.filter( (v,k,a) => k >= a.length/2 ).map( (v,k,a) => { \r\n                const ret = <div id={k+i} key={k+i} onClick={ !v.props.disabled? (() => setActive(k+i)) : undefined }>{v}</div>\r\n                return ret;\r\n            })}\r\n        </div>\r\n        <style global jsx>{`\r\n            @import \"node_modules/bootstrap/scss/_functions.scss\";\r\n            @import \"node_modules/bootstrap/scss/_variables.scss\";\r\n            @import \"src/variables.scss\";\r\n\r\n            .rounded-5{\r\n                border-radius: .5em;\r\n            }\r\n            .nav-partial{\r\n                min-width: 1rem;\r\n                min-height: 4rem;\r\n                transition: all .2s ease-in-out;\r\n            }\r\n            .nav-button, .nav-item{\r\n                color: $secondary;\r\n                cursor: pointer;\r\n                height: 100%;\r\n                width: auto;\r\n                user-select: none;\r\n\r\n                &:hover{\r\n                    color:  lighten($danger,29.5%);\r\n                }\r\n            }\r\n\r\n            .nav-item-active{\r\n                color: red !important;\r\n            }\r\n\r\n            .nav-item-disabled{\r\n                color: lighten($btn-link-disabled-color,27.5%);\r\n                user-select: none;\r\n                cursor: not-allowed;\r\n                &:hover{\r\n                    color:  lighten($btn-link-disabled-color,27.5%);\r\n                }\r\n            }\r\n\r\n            .nav-button i, .nav-item i{\r\n                transform: scale(1.5);\r\n                width:100%;\r\n                padding:0;\r\n                margin:0;\r\n                user-select: none;\r\n                text-transform: capitalize;\r\n            }\r\n            .nav-button{\r\n                color: black !important;\r\n                height: 4rem;\r\n                width: 4rem;\r\n                line-height: 3.5rem;\r\n                margin-top: -1.5rem;\r\n                margin-bottom: 1.5rem;\r\n            }\r\n\r\n            @media only screen and (orientation: landscape) and (max-height: 671px) {           \r\n                .nav-partial{\r\n                    flex-direction: column;\r\n                    //top: 50%;\r\n                    left: 100% !important;\r\n                    transform: translate(-100%, 0%) !important;\r\n                    margin-left: -1.1rem;\r\n                    padding:1.251rem 0 !important;\r\n\r\n                    .nav-button{\r\n                        margin:0;\r\n                        margin-left: -1.5rem;\r\n                        margin-right: 1.5rem;\r\n                    }\r\n                }\r\n            }\r\n            @media only screen and (orientation: portrait){\r\n\r\n            } \r\n        `}</style>\r\n    </>\r\n}\r\n\r\n\r\nNav.Item = function({children, icon, disabled, to, ...props}){\r\n    return <NavLink exact activeClassName=\"nav-item-active\" to={to??\"/\"} className={`nav-item ${disabled?\"nav-item-disabled\":\"\"} ${props.appendclass??\"\"}`} {...props}>\r\n        <div className={`d-flex my-0 mx-2 flex-column fs-6 fw-lighter`} >{children}</div>\r\n    </NavLink>\r\n}\r\n\r\nNav.Button = function({children,...props}){\r\n    return <div className={`nav-button ${props.appendclass??\"\"}`} {...props}>\r\n        <div className=\" pt-1 fs-1 fw-lighter\">{children}</div>\r\n    </div>\r\n}\r\n\r\nexport default Nav;","import { useEffect } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nexport default ({ ...props }) => {\r\n\r\n    return <>\r\n        <Row fluid id=\"Room\" className=\"h-100 m-auto\">\r\n            <Col xs={12} className=\"bg-light shadow-lg rounded-bottom\" style={{zIndex:1000}}>\r\n            \r\n            </Col>\r\n        </Row>\r\n    </>;\r\n}\r\n\r\n","import React from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\nexport default ({title, children, show, setShow = ()=>{}, callback, button_tittle, closeButton, ...props}) => {\r\n    return <>\r\n        <Modal\r\n            centered\r\n            show={show}\r\n            keyboard={true}\r\n            backdrop=\"static\"\r\n            onHide={() => setShow(false)}\r\n            dialogClassName=\"modal-partial modal-shadow-lg\"\r\n            {...props}\r\n        >\r\n            <Modal.Header closeButton={closeButton} >\r\n                <Modal.Title>{title}</Modal.Title>\r\n            </Modal.Header>\r\n            \r\n            <Modal.Body>\r\n                {children}\r\n            </Modal.Body>\r\n\r\n            { (button_tittle || closeButton) && <Modal.Footer>\r\n                {button_tittle && <Button variant=\"primary\" onClick={callback}>{button_tittle}</Button>}\r\n                {closeButton && <Button variant=\"outline-secondary\" onClick={() => setShow(false)}> Close</Button>}\r\n            </Modal.Footer>} \r\n        </Modal>\r\n\r\n        <style global jsx>{`\r\n            @import 'src/variables.scss';\r\n\r\n            .modal-partial {\r\n                .modal-title {\r\n                    font-weight: lighter;\r\n                    font-family: $header-font;\r\n\r\n                    h1,h2,h3,h4,h5,h6 {padding:0; margin:0}\r\n                }\r\n\r\n                .modal-header{\r\n                    padding-bottom: .2em;\r\n                }\r\n            }\r\n            \r\n\r\n            /* -----------------------------------------\r\n                Wearables\r\n            ----------------------------------------- */\r\n\r\n            /* ----------- Moto 360 Watch ----------- */\r\n            @media (max-device-width: 218px)and (max-device-height: 281px) { \r\n\r\n            }\r\n\r\n            /* ----------- Non-Retina Screens ----------- */\r\n            @media screen \r\n            and (min-device-width: 1200px) \r\n            and (max-device-width: 1600px) \r\n            and (-webkit-min-device-pixel-ratio: 1) { \r\n            }\r\n\r\n            /* ----------- Retina Screens ----------- */\r\n            @media screen \r\n            and (min-device-width: 1200px) \r\n            and (max-device-width: 1600px) \r\n            and (-webkit-min-device-pixel-ratio: 2)\r\n            and (min-resolution: 192dpi) { \r\n            }\r\n\r\n            /* Smartphones (landscape) ———– */\r\n            @media only screen\r\n            and (min-width : 321px) {\r\n            /* Styles */\r\n            }\r\n\r\n            /* Large Desktop and Laptop Screens (devices and browsers) */\r\n            @media only screen and (min-width: 1824px) {}\r\n\r\n            /* Tablet Devices, Desktop and Laptop Screens */\r\n            @media only screen and (max-width: 768px) {}\r\n\r\n            /* iPads (portrait and landscape) */\r\n            @media only screen and (min-device-width: 768px) and (max-device-width: 1024px) {}\r\n\r\n            /* Smartphones (portrait and landscape) */\r\n            @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {}\r\n\r\n            /* iPhone 4 */\r\n            @media only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-device-pixel-ratio: 1.5) {}\r\n\r\n\r\n            @media only screen and (orientation: landscape) and (max-height: 671px) {\r\n                .modal-dialog{\r\n                    max-width: 38rem !important;\r\n                }\r\n            }\r\n            @media only screen and (orientation: portrait){\r\n\r\n            }      \r\n        `}</style>\r\n    </>;\r\n}","import React, {useState, useContext, useEffect, useRef  } from 'react';\r\nimport { Button, Form, FloatingLabel, Spinner, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport Modal from 'partials/modal'\r\nimport MD from 'utils/md';\r\nimport { AuthenticationContext } from 'utils/authentication';\r\n\r\nexport default () => {\r\n    const formRef = useRef(null);\r\n    const [show, setShow] = useState(false);\r\n    const auth = useContext(AuthenticationContext);\r\n    const user = \"h3R\"\r\n\r\n    const [formvalues, setFormValues] = useState({formErrors:{}});\r\n    const [validated, setValidated] = useState(undefined);\r\n   \r\n    function handleUserInput (e) {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        validateField(name, value);\r\n    }\r\n\r\n    function validateField(name, value){\r\n        let check = false;\r\n        let {formErrors} = formvalues;\r\n\r\n        switch(name){\r\n            case 'email':\r\n                const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                check = re.test(value);\r\n                formErrors[name] = check ? '' : ' is invalid';\r\n                break;\r\n\r\n            case 'password':\r\n                check = value.length >= 6;\r\n                formErrors[name] = check ? '': ' is too short';\r\n                break;\r\n\r\n            default: console.warn(\"Invalid field name: \", name);\r\n        }\r\n\r\n        setFormValues( v => ({ ...v, [name]:value, [`${name}_check`]:check, formErrors }) );\r\n    }\r\n\r\n    function validateForm(){\r\n        let isValid = true;\r\n        for( let key in formvalues ){\r\n            if( key.indexOf('_check') !== -1 )\r\n                isValid &= formvalues[key];\r\n        }\r\n        setValidated( isValid?true:false );\r\n    }\r\n\r\n    useEffect(()=>{\r\n        validateForm();\r\n    },[formvalues]);\r\n\r\n    useEffect(()=>{\r\n        setValidated( false );\r\n    },[]);\r\n\r\n    function handleSubmit(event){\r\n        alert(\"NO IMPLEMENTATION\")\r\n    }\r\n\r\n    function hasError(error){\r\n        return(error.length === 0 ? '' : 'has-error');\r\n    }\r\n\r\n\r\n\r\n    return <>\r\n        <Button size=\"sm\" className=\"mt-4\" variant=\"link\" onClick={ ()=>setShow(1) }><i className=\"bi bi-lock\"></i>Forgot password?</Button>\r\n        <Modal closeButton size=\"lg\" {...{show, setShow}} title={<h2 className=\"user-select-none\">Forgot Password</h2>} size=\"md\">\r\n            <MD className=\"user-select-none\">{`Enter your email adress, on a couple of minutes you will receive an email with a link to reset your password.`}</MD>\r\n            <Form validated={validated} onSubmit={handleSubmit} ref={formRef}>\r\n                <FloatingLabel controlId=\"floatingInput\" label=\"Email address\" className=\"mb-3\">\r\n                    <Form.Control required name=\"email\" type=\"email\" placeholder=\" \" \r\n                    onChange={handleUserInput} />\r\n                </FloatingLabel>\r\n\r\n                <OverlayTrigger placement=\"bottom\"\r\n                overlay={\r\n                    <Tooltip className={`${validated?\"d-none\":\"\"}`}  id={`tooltip-bottom`}>\r\n                        Enter your email address first.\r\n                    </Tooltip>\r\n                }\r\n                >\r\n                    <span style={{padding:\"10px 0\"}}>\r\n                        <Button type=\"submit\" disabled={!validated && auth.isConnected} > \r\n                        {auth.isConnected? \r\n                            <> Send password reset email </>\r\n                            : <><Spinner as=\"span\"animation=\"grow\" role=\"status\" aria-hidden=\"true\"/> Connecting </>\r\n                        }</Button>\r\n                    </span>\r\n                </OverlayTrigger>\r\n\r\n            </Form>\r\n        </Modal>\r\n    </>;\r\n}","import React, {useState, useContext, useEffect, useRef  } from 'react';\r\nimport { Button, Form, FloatingLabel, Spinner, OverlayTrigger, Tooltip, Card } from 'react-bootstrap';\r\nimport Modal from 'partials/modal'\r\nimport MD from 'utils/md';\r\nimport { AuthenticationContext } from 'utils/authentication';\r\n\r\nexport default () => {\r\n    const formRef = useRef(null);\r\n    const [show, setShow] = useState(false);\r\n    const auth = useContext(AuthenticationContext);\r\n    const user = \"h3R\"\r\n\r\n    const [formvalues, setFormValues] = useState({formErrors:{}});\r\n    const [validated, setValidated] = useState(undefined);\r\n   \r\n    function handleUserInput (e) {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        validateField(name, value);\r\n    }\r\n\r\n    function validateField(name, value){\r\n        let check = false;\r\n        let {formErrors} = formvalues;\r\n\r\n        switch(name){\r\n            case 'email':\r\n                const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                check = re.test(value);\r\n                formErrors[name] = check ? '' : ' is invalid';\r\n                break;\r\n\r\n            case 'password':\r\n                check = value.length >= 6;\r\n                formErrors[name] = check ? '': ' is too short';\r\n                break;\r\n\r\n            default: console.warn(\"Invalid field name: \", name);\r\n        }\r\n\r\n        setFormValues( v => ({ ...v, [name]:value, [`${name}_check`]:check, formErrors }) );\r\n    }\r\n\r\n    function validateForm(){\r\n        let isValid = true;\r\n        for( let key in formvalues ){\r\n            if( key.indexOf('_check') !== -1 )\r\n                isValid &= formvalues[key];\r\n        }\r\n        setValidated( isValid?true:false );\r\n    }\r\n\r\n    useEffect(()=>{\r\n        validateForm();\r\n    },[formvalues]);\r\n\r\n    useEffect(()=>{\r\n        setValidated( false );\r\n    },[]);\r\n\r\n    function handleSubmit(event){\r\n        alert(\"NO IMPLEMENTATION\")\r\n    }\r\n\r\n    function hasError(error){\r\n        return(error.length === 0 ? '' : 'has-error');\r\n    }\r\n\r\n\r\n\r\n    return <>\r\n        <Card.Footer className=\"text-center user-select-none\" onClick={ ()=>setShow(1) }> Create an account </Card.Footer>\r\n        <Modal closeButton {...{show, setShow}} title={<h2 className=\"user-select-none\">Let's create your account</h2>}>\r\n            <MD className=\"user-select-none\">{`Create your account. It's free and only takes a minute.`}</MD>\r\n            <Form validated={validated} onSubmit={handleSubmit} ref={formRef}>\r\n                <FloatingLabel controlId=\"floatingInput\" label=\"Email address\" className=\"mb-3\">\r\n                    <Form.Control required name=\"email\" type=\"email\" placeholder=\" \" \r\n                    onChange={handleUserInput} />\r\n                </FloatingLabel>\r\n\r\n                <OverlayTrigger placement=\"bottom\"\r\n                overlay={\r\n                    <Tooltip className={`${validated?\"d-none\":\"\"}`}  id={`tooltip-bottom`}>\r\n                        Enter your email address first.\r\n                    </Tooltip>\r\n                }\r\n                >\r\n                    <span style={{padding:\"10px 0\"}}>\r\n                        <Button type=\"submit\" disabled={!validated && auth.isConnected} > \r\n                        {auth.isConnected? \r\n                            <> CREATE ACCOUNT </>\r\n                            : <><Spinner as=\"span\"animation=\"grow\" role=\"status\" aria-hidden=\"true\"/> Connecting </>\r\n                        }</Button>\r\n                    </span>\r\n                </OverlayTrigger>\r\n\r\n            </Form>\r\n        </Modal>\r\n    </>;\r\n}","export default __webpack_public_path__ + \"static/media/logo.f23962e9.png\";","//https://learnetto.com/blog/react-form-validation\r\n\r\nimport { useContext, useRef, useState, useEffect } from 'react';\r\nimport { Row, Col, Card,Form, FloatingLabel, Button, Spinner, OverlayTrigger, Tooltip } from \"react-bootstrap\"\r\nimport { AuthenticationContext } from 'utils/authentication';\r\nimport RecoveryModal from 'components/modal_recovery'\r\nimport RegisterModal from 'components/modal_register'\r\nimport logo from 'assets/img/logo.png';\r\nimport toast from 'react-hot-toast';\r\nimport cookies from '@h3r/cookies'\r\nimport * as BRA from 'lib_bra'\r\n\r\nexport default () => {\r\n    const auth = useContext(AuthenticationContext);\r\n\r\n    const formRef = useRef(null);\r\n    const [validated, setValidated] = useState(undefined);\r\n    const [formvalues, setFormValues] = useState({formErrors:{}, email: cookies.get(\"admire_app_email\"), remember: !!cookies.get(\"admire_app_email\")});\r\n   \r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault();\r\n        auth.login(formvalues.email, formvalues.password)\r\n        .then(  app_token => {\r\n            if(formvalues.remember){\r\n                cookies.set('admire_app_token', app_token, process.env.REACT_APP_COOKIES_EXPIRE_TIME);\r\n                cookies.set(\"admire_app_email\", formvalues.email, process.env.REACT_APP_COOKIES_EXPIRE_TIME);\r\n            }\r\n        });\r\n    }\r\n\r\n    function handleUserInput (e) {\r\n        const name  = e.target.name;\r\n        const type  = e.target.type;\r\n        const  value = type===\"checkbox\"?e.target.checked:e.target.value;\r\n\r\n        validateField(name, value, type);\r\n    }\r\n\r\n    function validateField(name, value, type = \"any\"){\r\n        let check = false;\r\n        let {formErrors} = formvalues;\r\n\r\n        switch(type){\r\n            case 'email':\r\n                const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                check = re.test(value);\r\n                formErrors[name] = check ? '' : ' is invalid';\r\n                break;\r\n\r\n            case 'password':\r\n                check = value.length >= 6;\r\n                formErrors[name] = check ? '': ' is too short';\r\n                break;\r\n\r\n            default:\r\n                check = true;\r\n                formErrors[name] = '';\r\n                break;\r\n        }\r\n\r\n        setFormValues( v => ({ ...v, [name]:value, [`${name}_check`]:check, formErrors }) );\r\n    }\r\n\r\n    function validateForm(){\r\n        let isValid = true;\r\n        for( let key in formvalues ){\r\n            if( key.indexOf('_check') !== -1 )\r\n                isValid &= formvalues[key];\r\n        }\r\n        setValidated( isValid?true:false );\r\n    }\r\n\r\n    useEffect(()=>{\r\n        validateForm();\r\n    },[formvalues]);\r\n    \r\n\r\n    useEffect(()=>{\r\n        setValidated( false );\r\n\r\n    },[]);\r\n\r\n    function hasError(error){\r\n        return(error.length === 0 ? '' : 'has-error');\r\n    }\r\n\r\n\r\n    return <>\r\n    <Card id=\"login\" bg=\"light\" className=\"flex-column text-center position-absolute start-50 top-50 translate-middle\" style={{ width: '24rem' }}>\r\n\r\n        <Col>\r\n            <Card.Img variant=\"top\" className=\"mt-4 user-select-none\" src={logo}/>\r\n            <h1 className=\"text-start ps-4 mb-0 mt-3 user-select-none\">{process.env.REACT_APP_NAME}</h1>\r\n            <div className=\"divider\"><span/></div>\r\n        </Col>\r\n\r\n        <Col>\r\n            <Card.Body as={Col} className=\"text-start px-4 pb-4\">\r\n\r\n            <Card.Text className=\"user-select-none\">Enter your e-mail adress and your password.</Card.Text>\r\n            \r\n            <Form validated={validated} onSubmit={handleSubmit} ref={formRef}>\r\n                <FloatingLabel controlId=\"floatingInput\" label=\"Email address\" className=\"mb-3\">\r\n                    <Form.Control required name=\"email\" type=\"email\" placeholder=\" \" onChange={handleUserInput} defaultValue={formvalues.email??\" \"}/>\r\n                </FloatingLabel>\r\n                <FloatingLabel controlId=\"floatingPassword\" label=\"Password\">\r\n                    <Form.Control required name=\"password\" type=\"password\" placeholder=\" \" onChange={handleUserInput} defaultValue={formvalues.password??\"\"}/>\r\n                </FloatingLabel>\r\n\r\n                <Form.Switch id=\"remember-switch\" label=\"Remember me\" className=\"user-select-none\" name=\"remember\" onChange={handleUserInput} defaultChecked={formvalues.remember??false}/>\r\n\r\n\r\n                <OverlayTrigger placement=\"bottom\"\r\n                    overlay={\r\n                        <Tooltip className={`${validated?\"d-none\":\"\"} mt-2`}  id={`tooltip-bottom`}>\r\n                            Check form errors\r\n                        </Tooltip>\r\n                    }\r\n                    >\r\n                        <span style={{padding:\"10px 0\"}}>\r\n                            <Button size=\"sm\" className=\"mt-4\" type=\"submit\" disabled={!validated && auth.isConnected} > \r\n                                {auth.isConnected?\r\n                                <><i className=\"bi bi-box-arrow-in-left\"/> Log me in </>\r\n                                : <><Spinner as=\"span\"animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\"/> Connecting </>\r\n                            }</Button>\r\n                        </span>\r\n                    </OverlayTrigger>\r\n                    \r\n                <RecoveryModal/>\r\n            </Form>\r\n\r\n\r\n            </Card.Body>\r\n            <RegisterModal/>\r\n        </Col>\r\n    </Card>\r\n\r\n    <style global jsx>{`\r\n        @import \"src/variables.scss\";\r\n        .divider {\r\n                border-bottom: 1px solid #FFF;\r\n                background-color: #DADADA;\r\n                height: 2px;\r\n                margin: 0.5em 0px 1.5em;\r\n\r\n                & span{\r\n                    position:relative;\r\n                    display: block;\r\n                    width: 75px;\r\n                    height: 3px;\r\n                    background-color: $color4;\r\n                    transform:translatey(-25%);\r\n                    left: 6%;\r\n                }\r\n        }\r\n\r\n        #login{\r\n            border:none;\r\n            img {\r\n                width: 192px;\r\n                filter: \r\n                    hue-rotate(260deg)\r\n                ;\r\n            }\r\n\r\n            .card-footer{\r\n                color:$text;\r\n                background:$color4;\r\n                transition: all 0.1s ease-in-out; \r\n                &:hover{\r\n                    background:darken($color4, 10%);\r\n                    font-weight:bold;\r\n                    cursor:pointer;\r\n                }\r\n            }\r\n        } \r\n\r\n        @media only screen and (orientation: landscape) and (max-height: 671px) {           \r\n            #login{\r\n                width: 40rem !important;\r\n                flex-direction: row !important;\r\n                .col{\r\n                    align-self: end;\r\n                }\r\n            }\r\n        }\r\n        @media only screen and (orientation: portrait){\r\n\r\n        }    \r\n    `}</style>\r\n    </>;\r\n}\r\n","import React, {useEffect, useState, useReducer} from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport Modal from 'partials/modal'\r\nimport MD from 'utils/md';\r\n\r\nexport default () => {\r\n    const [show, setShow] = useState(false);\r\n    const [proposal, dispatch] = useReducer((o,n)=>n, {proposalEvent : undefined});\r\n    useEffect(() => { \r\n            window.addEventListener('beforeinstallprompt',onBeforeInstallPrompt);\r\n        return () => { \r\n            window.removeEventListener('beforeinstallprompt',onBeforeInstallPrompt);\r\n        }\r\n    },[]);\r\n\r\n    function onBeforeInstallPrompt(e) \r\n    {\r\n        debugger;\r\n        e.preventDefault();\r\n        dispatch(state => ({...state, e}));\r\n    }\r\n\r\n    async function promptInstall()\r\n    {\r\n        if(!proposal?.proposalEvent) \r\n            return;\r\n\r\n        proposal.proposalEvent.prompt();\r\n        const { outcome } = await proposal.proposalEvent.userChoice;\r\n        if (outcome === 'accepted') {\r\n            dispatch(state => ({ ...state, proposalEvent: undefined }));\r\n        }\r\n    }\r\n\r\n    return <>\r\n        <Button variant=\"link\" onClick={ ()=>setShow(1) }>About</Button>\r\n        <Modal closeButton size=\"md\" {...{show, setShow}} title={<span>{process.env.REACT_APP_NAME} - Offline capable <Button variant={`${proposal.proposalEvent?\"outline-primary\":\"outline-secondary\"}`}size=\"sm\" onClick={promptInstall} disabled={!proposal.proposalEvent}> {`${proposal.proposalEvent? \"Install PWA\" : \"Not available\"}`}</Button></span>}>\r\n        <MD>{`\r\n        An offline-capable AdMiRe version is available, wich is a [Progressive Web App](https://docs.microsoft.com/en-us/microsoft-edge/progressive-web-apps-chromium/).\r\n\r\n        The app serves the following features:\r\n        - Offline-capable (with [Service Workers](https://developers.google.com/web/fundamentals/primers/service-workers/))\r\n        - \"Add to Home Screen\" feature on Android and iOS supported devices to launch the app from the home screen.\r\n        - Dark Mode.\r\n        - Privacy-focused - We don't collect any personal data.\r\n        - Lightweight - The app is only ~5MB.\r\n\r\n        Hope you liked using this app 😉\r\n\r\n        <div align=\"center\" className=\"fw-bolder\">Made with ❤️ by <a href=\"https://www.upf.edu/web/gti\"> UPF-GTI</a> </div>\r\n        `}</MD>\r\n        </Modal>\r\n    </>;\r\n}\r\n//<Button onClick={handleClick}>Install {import.meta.env.NAME}</Button>","import React, {useState, useContext } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport Modal from 'partials/modal'\r\nimport MD from 'utils/md';\r\nimport { AuthenticationContext } from 'utils/authentication';\r\n\r\nexport default () => {\r\n    const [show, setShow] = useState(false);\r\n    const auth = useContext(AuthenticationContext);\r\n    const user = \"h3R\"\r\n\r\n    if(!auth.isLogged) return <></>;\r\n    return <>\r\n        <Button variant=\"link\" onClick={ ()=>setShow(1) }>Profile</Button>\r\n        <Modal closeButton size=\"lg\" {...{show, setShow}} title={<h2 className=\"user-select-none\">{user}</h2>}>\r\n        <MD className=\"user-select-none\">{`\r\n        An offline-capable AdMiRe version is available, wich is a [Progressive Web App](https://docs.microsoft.com/en-us/microsoft-edge/progressive-web-apps-chromium/).\r\n\r\n        The app serves the following features:\r\n        - Offline-capable (with [Service Workers](https://developers.google.com/web/fundamentals/primers/service-workers/))\r\n        - \"Add to Home Screen\" feature on Android and iOS supported devices to launch the app from the home screen.\r\n        - Dark Mode.\r\n        - Privacy-focused - We don't collect any personal data.\r\n        - Lightweight - The app is only ~5MB.\r\n\r\n        Hope you liked using this app 😉\r\n\r\n        <div align=\"center\" className=\"fw-bolder\">Made with ❤️ by <a href=\"https://www.upf.edu/web/gti\"> UPF-GTI</a> </div>\r\n        `}</MD>\r\n\r\n        <Button onClick={auth.logout}><i className=\"bi bi-power\"></i> Log me out</Button>\r\n        </Modal>\r\n    </>;\r\n}","import screenfull from 'screenfull'\r\nimport { Button } from 'react-bootstrap'\r\nimport { useState, useEffect } from 'react'\r\n\r\n\r\nexport default () => {  \r\n    let [state, setState] = useState(0);\r\n\r\n    function handleClick(){\r\n        /*let promise\r\n        if (document.fullscreenElement) {\r\n            promise = document.exitFullscreen();\r\n        } else {\r\n            promise = document.documentElement.requestFullscreen();\r\n        }\r\n        promise.then( ()=>setState(++state) );*/\r\n        screenfull.toggle();\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const f = () => setState(++state);\r\n        screenfull.on('change', f);\r\n    return ()=>{\r\n        screenfull.off('change', f);\r\n    }\r\n    },[])\r\n    \r\n//window.document.documentElement.webkitRequestFullScreen\r\n\r\n    return <div id=\"btn_fullscreen\">\r\n        { screenfull.isEnabled && \r\n            <Button \r\n            onClick={handleClick} variant=\"link\"> \r\n                {  document.fullscreen && <i className=\"bi bi-fullscreen-exit\"/> }\r\n                { !document.fullscreen && <i className=\"bi bi-fullscreen\"/> }\r\n            </Button>    \r\n        }\r\n    </div>;\r\n}","import { Helmet } from \"react-helmet\"\r\nimport { Image }          from 'react-bootstrap'\r\nimport toast, { Toaster } from 'react-hot-toast'\r\n\r\nimport AboutModal         from 'components/modal_about'\r\nimport ProfileModal       from 'components/modal_profile'\r\nimport FullScreenBTN      from 'components/btn_fullscreen'\r\n\r\nimport logo from \"assets/img/logo.png\"\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\r\nimport 'style.scss'\r\n\r\nwindow.toast = toast;\r\nexport default ({children,...props}) => {\r\nreturn <div id=\"layout\" {...props}>\r\n   \r\n    <Helmet>\r\n     <title>{process.env.REACT_APP_NAME}</title>\r\n    </Helmet>\r\n    <Toaster\r\n          id=\"toaster\"\r\n          position=\"bottom-right\"\r\n          reverseOrder={true}\r\n          toastOptions={{\r\n              duration: 2000,\r\n          }}\r\n    />\r\n\r\n\r\n    <div id=\"title\" variant=\"none\" className=\"d-flex m-3 position-absolute top-0 start-0 user-select-none\">\r\n        <Image className=\"me-2\" width={32} height={32} src={logo}/>\r\n        <h1 className=\"fs-3\">{process.env.REACT_APP_NAME}</h1>\r\n    </div>\r\n\r\n    <div className=\"z-top d-flex m-2 position-absolute top-0 end-0\">\r\n        <ProfileModal/>\r\n        <AboutModal/>\r\n        <FullScreenBTN/>\r\n    </div>\r\n\r\n    {children}\r\n\r\n    <style global jsx>{`\r\n      @import \"src/variables.scss\";\r\n\r\n      #layout {\r\n        height:100vh;\r\n        text-align:center;\r\n        background:$background;\r\n      }  \r\n\r\n      #title {\r\n        color:$text;\r\n        filter: invert(.5) brightness(0.5);\r\n        mix-blend-mode: luminosity;\r\n      }\r\n\r\n      .z-top{\r\n        z-index:1000;\r\n      }\r\n      \r\n    `}</style>\r\n</div>\r\n}","import {useHistory} from 'react-router-dom'\r\nimport {Row, Col, Card} from 'react-bootstrap'\r\n\r\nfunction RoomTile({id, name, ...props}){\r\n    \r\n\r\n    return <div>\r\n    \r\n        <Card className=\"bg-dark text-light\" {...props}>\r\n            <Card.Img variant=\"top\" src={`https://unsplash.it/160/100?image=${Math.floor(Math.random() * 40)}`} />\r\n            <Card.Body>\r\n            <Card.Title>#{name}</Card.Title>\r\n            {/*<Card.Text></Card.Text>*/}\r\n            </Card.Body>\r\n        </Card>\r\n\r\n        <style global jsx>{`\r\n            @import 'src/variables.scss';\r\n\r\n            .card {\r\n                cursor: pointer;\r\n                user-select: none;\r\n                transition: all 0.075s ease-in-out;\r\n\r\n                &:hover {\r\n                    .card-body{\r\n                        background: lighten($dark,25%);\r\n                    }\r\n                        \r\n                    box-shadow: 0 0 0px 2px rgba(255, 255, 255, .5) !important;\r\n                }\r\n\r\n                .card-body{\r\n                    transition: all 0.075s ease-in-out;\r\n                    .card-title{\r\n                        margin:0;\r\n                    }\r\n                }\r\n            }\r\n        `}</style>\r\n    </div>\r\n}\r\n\r\n\r\nexport default ()=>{\r\n    const history = useHistory();\r\n    \r\n    return <>\r\n        <Row fluid id=\"Room\" className=\"h-100 m-auto\">\r\n            <Col xs={12} sm={{span:10, offset:1}} >\r\n        \r\n            <h1 className=\"text-light\">Lobby</h1>    \r\n            <Row xs={2} sm={4} lg={4} xl={5} className=\"g-4\">\r\n            {Array.from({ length: 9 }).map((_, idx) => (\r\n                <Col key={idx}>\r\n                    <RoomTile name={`Room ${idx}`} onClick={()=>history.push(`/room/${idx}`)}/>\r\n                </Col>\r\n            ))}\r\n            </Row>\r\n\r\n            </Col>\r\n        </Row>\r\n    </>\r\n}","import { useState, useEffect } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport MD from 'utils/md'\r\nimport Gesture from 'rc-gesture';\r\nimport { findByDisplayValue } from '.pnpm/@testing-library+dom@8.10.1/node_modules/@testing-library/dom';\r\n\r\nexport default ({ ...props }) => {\r\n    const pages = [\"p1\", \"p2\", \"p3\"];\r\n    const [selected, setSelected] = useState(0);\r\n    const [page, setPage] = useState(null);\r\n    const [views, setViews] = useState([]);\r\n\r\n    //use useEffect to fetch page views dynamically\r\n    useEffect(() => {\r\n        (async () => {\r\n            let vs = [];\r\n            for (let p of pages)\r\n                await import(`pages/${p}.jsx`).then(v => vs.push(<v.default />))\r\n            setViews([...vs]);\r\n            setPage(vs[selected]);\r\n        })();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setPage(views[selected]);\r\n    }, [selected]);\r\n\r\n    function onKeyPressed(e)\r\n    {\r\n        switch(e?.keyCode)\r\n        {\r\n            case 37: return setSelected( s => (s-1 < 0)? pages.length-1 : s-1 );\r\n            case 39: return setSelected( s => (s+1)%pages.length );\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n            document.addEventListener(\"keydown\", onKeyPressed)\r\n        return ()=>{\r\n            document.removeEventListener(\"keydown\", onKeyPressed)\r\n        }\r\n    }, [])\r\n\r\n    return <>\r\n    <Gesture\r\n        onSwipeLeft={ () => setSelected( s => (s+1)%pages.length ) } \r\n        onSwipeRight={() => setSelected( s => (s-1 < 0)? pages.length-1 : s-1 ) }\r\n        \r\n    >\r\n        <Row id=\"wizard\" className=\"pt-5 h-100 m-auto\">\r\n            <Col sm={12} md={{ span: 10, offset: 1 }} lg={{ span: 8, offset: 2 }} xl={{ span: 6, offset: 3 }} className=\"pt-3 bg-light shadow-lg rounded-bottom\" style={{zIndex:1000}}>\r\n            <ul className=\"nav nav-tabs justify-content-start mb-2\" style={{ width: \"calc(100% + 24px)\",marginLeft: \"-12px\",marginTop: \"-3.6rem\"}}>\r\n                { pages.map( (v,k) => <li key={k} className=\"nav-item\">\r\n                        <div className={`nav-link ${selected === k?\"active\":\"\"}`} onClick={()=>setSelected(k)}>{v}</div>  \r\n                </li>)}\r\n            </ul>\r\n\r\n            {page}\r\n\r\n            </Col>\r\n        </Row>\r\n    </Gesture>\r\n    </>;\r\n}\r\n\r\n//xs={12} md={{span:6, offset:3}} lg={{span:8, offset:2}}","import {useContext} from 'react'\r\nimport { Container } from \"react-bootstrap\"\r\nimport { BrowserRouter as Router, Switch, Route, Link, NavLink, useParams, useHistory, Redirect } from \"react-router-dom\"\r\n\r\nimport { AuthenticationContext } from 'utils/authentication';\r\n\r\nimport Nav from \"partials/nav\"\r\nimport Room  from 'views/room';\r\nimport Login  from 'views/login';\r\nimport Layout from 'partials/layout'\r\nimport Lobby  from 'views/lobby'\r\nimport Wizard from 'views/wizard'\r\n\r\n\r\nfunction App({...props}) {\r\n  \r\n  const history = useHistory();\r\n  const auth = useContext(AuthenticationContext);\r\n  const { roomId } = useParams();\r\n\r\n  let buttons = <Nav.Button onClick={()=>alert(\"hey!\")} label=\"Create room\" appendclass=\"shadow rounded-circle bg-danger\" >\r\n            <i className=\"bi bi-plus-lg\"></i>\r\n        </Nav.Button>\r\n\r\n  /*buttons = <Nav.Button label=\"Exit room\" appendclass=\"shadow rounded-circle bg-danger\">\r\n      <i className=\"bi bi-telephone-x\"></i>\r\n  </Nav.Button>*/\r\n\r\n  if(!auth?.isLogged)\r\n    return <Layout className=\"App\" children={<Login />}/>\r\n  else\r\n    return <>\r\n    <Layout className=\"App\">\r\n      \r\n      <Container fluid id=\"content-wrapper\">\r\n      { history.location.pathname === '/'         && <Lobby/>  }\r\n      { history.location.pathname === '/settings' && <Wizard/> }\r\n      { (/^\\/room\\/[a-z0-9]+/).test(history.location.pathname) && <Room/>   }\r\n      { (/^\\/room\\/[a-z0-9]+\\/chat$/).test(history.location.pathname)  && <Redirect to=\"/\"/> }\r\n      { (/^\\/room\\/[a-z0-9]+\\/users$/).test(history.location.pathname) && <Redirect to=\"/\"/> }\r\n      </Container>\r\n\r\n      <Nav buttons={buttons}>\r\n          <Nav.Item><i className=\"bi bi-house\"/>Lobby</Nav.Item>\r\n          <Nav.Item to=\"/settings\"><i className=\"bi bi-magic\"/>Settings</Nav.Item>\r\n          <Nav.Item to=\"/users\" disabled><i className=\"bi bi-people\"/>Users</Nav.Item>\r\n          <Nav.Item to=\"/chat\" disabled><i className=\"bi bi-chat-dots\"/>Chat</Nav.Item>\r\n      </Nav>\r\n \r\n    </Layout>\r\n    <style global jsx>{`\r\n\r\n      #content-wrapper{\r\n        height: 100%;\r\n        padding-bottom: 6rem;\r\n        padding-top: 6rem;\r\n        overflow-y: scroll;\r\n        overflow-x: hidden;\r\n      }\r\n\r\n      @media only screen and (orientation: landscape) and (max-height: 671px) {           \r\n          #content-wrapper{\r\n            padding-bottom: 1rem;\r\n            padding-top: 1rem;\r\n            padding-right:3rem;\r\n          }\r\n      }\r\n      @media only screen and (orientation: portrait){\r\n\r\n      }    \r\n    `}</style>\r\n  </>\r\n}\r\n\r\nexport default App;\r\n","import { useHistory } from 'react-router-dom'\r\n\r\nimport MD from 'utils/md';\r\nimport Modal from 'partials/modal'\r\nimport Layout from 'partials/layout'\r\n\r\n\r\nexport default ()=>{\r\n    const history = useHistory();\r\n\r\n    return <Layout className=\"user-verified\">\r\n        <Modal size=\"md\" show={true} \r\n            title={<h2 className=\"user-select-none\">User verified!🎉🎉</h2>}\r\n            button_tittle=\"Understood\"\r\n            callback={ ()=>{ history.push('/') } }\r\n        >\r\n            <MD className=\"user-select-none\">{`Account verified successfully in the system. You can now login on the application.`}</MD>\r\n        </Modal> \r\n    </Layout>\r\n}","import toast from 'react-hot-toast'\r\nimport { useState, useEffect, useRef } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Form, FloatingLabel, OverlayTrigger, Tooltip, Button} from 'react-bootstrap'\r\n\r\nimport http from 'utils/http'\r\nimport MD from 'utils/md'\r\nimport Modal from 'partials/modal'\r\nimport Layout from 'partials/layout'\r\n\r\n\r\nexport default ()=>{\r\n    let { token } = useParams();\r\n    const history = useHistory();\r\n\r\n    const formRef = useRef(null);\r\n    const [validated, setValidated] = useState(undefined);\r\n    const [formvalues, setFormValues] = useState({formErrors:{}});\r\n\r\n    function handleUserInput (e) {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        validateField(name, value);\r\n    }\r\n\r\n    function validateField(name, value){\r\n        let check = false;\r\n        let {formErrors} = formvalues;\r\n\r\n        switch(name){\r\n            case 'email':\r\n                const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                check = re.test(value);\r\n                formErrors[name] = check ? '' : ' is invalid';\r\n                break;\r\n\r\n            case 'password':\r\n                check = value.length >= 6;\r\n                formErrors[name] = check ? '': ' is too short';\r\n                break;\r\n\r\n            default: console.warn(\"Invalid field name: \", name);\r\n        }\r\n\r\n        setFormValues( v => ({ ...v, [name]:value, [`${name}_check`]:check, formErrors }) );\r\n    }\r\n\r\n    function validateForm(){\r\n        let isValid = true;\r\n        for( let key in formvalues ){\r\n            if( key.indexOf('_check') !== -1 )\r\n                isValid &= formvalues[key];\r\n        }\r\n        setValidated( isValid?true:false );\r\n    }\r\n\r\n    useEffect(()=>{\r\n        validateForm();\r\n    },[formvalues]);\r\n    \r\n\r\n    useEffect(()=>{\r\n        setValidated( false );\r\n    },[]);\r\n\r\n    function hasError(error){\r\n        return(error.length === 0 ? '' : 'has-error');\r\n    }\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault();\r\n        const toastId = toast.loading('Resetting password...');\r\n        const password = formvalues.password;\r\n        await http.post(`${process.env.REACT_APP_API_URL}/reset-password/${token}`, {password})\r\n        .then( ({status, description, message }) => {\r\n            switch (status) {\r\n                case 'ok':\r\n                    toast.success('Success', {id: toastId});\r\n                    setTimeout( ()=>history.push(`/`), 1000);\r\n                    break;\r\n                case 400: toast.error(message, {id: toastId}); break;\r\n                case 'error': toast.error(description, {id: toastId}); break;\r\n                default: toast.warn(description, {id: toastId});\r\n            }\r\n        })\r\n        .catch(err => {\r\n            toast.error(`Error: ${err}`, {id: toastId});\r\n        });\r\n    }\r\n\r\n    return <Layout className=\"reset-password\">\r\n        <Modal size=\"md\" show={true} \r\n            title={<h2 className=\"user-select-none\">Reset password</h2>}\r\n        >\r\n            <MD className=\"user-select-none\">{ \"Please enter your new password.\"}</MD>\r\n            \r\n            <Form validated={validated} onSubmit={handleSubmit} ref={formRef}>\r\n                <FloatingLabel controlId=\"floatingPassword\" label=\"New Password\">\r\n                    <Form.Control required name=\"password\" type=\"password\" placeholder=\" \" onChange={handleUserInput} defaultValue={formvalues.password??\"\"}/>\r\n                </FloatingLabel>\r\n\r\n                <OverlayTrigger placement=\"bottom\"\r\n                overlay={\r\n                    <Tooltip className={`${validated?\"d-none\":\"\"} mt-2`}  id={`tooltip-bottom`}>\r\n                        Check form errors\r\n                    </Tooltip>\r\n                }\r\n                >\r\n                    <span style={{padding:\"10px 0\"}}>\r\n                        <Button className=\"mt-4\" type=\"submit\" disabled={!validated} > Proceed </Button>\r\n                    </span>\r\n                </OverlayTrigger>\r\n\r\n            </Form>\r\n\r\n        </Modal> \r\n    </Layout>\r\n}","import { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\"\r\nimport App from 'views/App'\r\nimport Verified from 'views/verified'\r\nimport ResetPass from 'views/resetpassword'\r\n\r\nexport default ({children})=> <>\r\n    <Router>\r\n    <Switch>\r\n        <Route component={App}       exact path={[\"/\", \"/settings\", \"/about\", \"/users\", \"/chat\", \"/profile\", \"/room/:roomId\", \"/room/:roomId/chat\", \"/room/:roomId/guests\"]} />\r\n        <Route component={Verified}  exact path=\"/verified/:token\"/>\r\n        <Route component={ResetPass} exact path=\"/reset-password/:token\"/>\r\n        <Route> <Redirect to='/'/> </Route>\r\n    </Switch>\r\n    </Router>\r\n</>","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n\r\nimport {ProgressBar} from 'react-bootstrap';\r\n\r\nimport Router from 'components/router';\r\nimport AuthenticationContext  from 'utils/authentication'\r\n\r\nimport 'style.scss';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AuthenticationContext>\r\n    <React.Suspense children={<Router/>} fallback={<ProgressBar className=\"start-50\" animated now={100} />}/>\r\n    </AuthenticationContext>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}